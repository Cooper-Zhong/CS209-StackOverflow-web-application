[{"owner":{"profile_image":"https://www.gravatar.com/avatar/72c98df8e0ddc6baa8f73c592326b93d?s=256&d=identicon&r=PG","account_id":2547950,"user_type":"registered","user_id":2212346,"link":"https://stackoverflow.com/users/2212346/user2212346","reputation":68,"display_name":"user2212346"},"content_license":"CC BY-SA 4.0","score":-1,"is_accepted":false,"last_activity_date":1558442248,"creation_date":1558434922,"body":"<p>You could try a <a href=\"https://docs.oracle.com/javase/7/docs/api/java/io/BufferedInputStream.html\" rel=\"nofollow noreferrer\">BufferedInputStream</a> </p>\n\n<p>As @StephenC replied is it unrelevant in this case to use a BufferedInputStream because the buffer is big enough.</p>\n\n<p>I reproduced the behaviour on my computer (with an SSD drive). I took a 100MB file.</p>\n\n<ul>\n<li>It took 110ms to create the new file with this example. </li>\n<li>With an InputStreamBuffer and an OutputStream = 120 ms.</li>\n<li>With an InputStream and an OutputStreamBuffer = 120 ms.</li>\n<li>With an InputStreamBuffer and an\nOutputStreamBuffer = 110 ms.</li>\n</ul>\n\n<p>I don't have a so long execution time as your's. </p>\n\n<p>Maybe the problem comes from your <code>readerSuppliers</code> ?</p>\n","answer_id":56236424,"question_id":56236189,"last_edit_date":1558442248},{"owner":{"profile_image":"https://www.gravatar.com/avatar/16cba8499bada37bc7a1f9b44ec39e64?s=256&d=identicon&r=PG","account_id":1590496,"user_type":"registered","user_id":1473907,"link":"https://stackoverflow.com/users/1473907/mcacorner","reputation":1304,"display_name":"mcacorner","accept_rate":73},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1558433161,"creation_date":1558433161,"body":"<p>One can you use <code>java.nio.file.Files</code>'s below method</p>\n\n<pre><code>delete(Path path)\ndeleteIfExists(Path path)\n</code></pre>\n\n<p>For more information refer <a href=\"https://docs.oracle.com/javase/tutorial/essential/io/delete.html\" rel=\"nofollow noreferrer\">this article</a></p>\n","answer_id":56235914,"question_id":3355746},{"owner":{"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=256&g=1","account_id":3282,"user_type":"registered","user_id":4725,"link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline","reputation":146296,"display_name":"Tom Hawtin - tackline","accept_rate":100},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":true,"last_activity_date":1558271346,"creation_date":1558271346,"body":"<p><strong>Note:</strong> Don't use Java Serialization. Also <code>DataOutputStream</code> has some wacky formatting, so don't use that either.</p>\n\n<p><code>DataOutputStream</code> provides a layer over <code>OutputStream</code> that supports formatting data as required by Java class files. It doesn't add any tags/metadata, it just writes the data in a standard format. It's clearly part of an early compiler made public because it might be useful - typical of JDK1.00 classes.</p>\n\n<p><code>ObjectOutputStream</code> provides a layer over <code>DataOutputStream</code> (doesn't have to be implemented with that class, but the low-level data format is the same) that supports writing a specific file format containing arbitrary object data. As with most formats, this includes a bundle of headers.</p>\n\n<p>When you write an object to an <code>ObjectOutputStream</code>, it'll also write the class description or a reference if it has been used since the last <code>reset</code>. The \"data\" methods are specified to format much the same as <code>DataOutputStream</code>, <strong>but the file already has a header</strong>. These methods are typically used in custom <code>writeObject</code> methods after <code>defaultWriteObject</code> or <code>writeFields</code>.</p>\n\n<p><strong>tl;dr</strong> There's a header with <code>ObjectOutputStream</code>; <code>ObjectOutputStream</code> is a (permeable) layer over <code>DataOutputStream</code>.</p>\n","answer_id":56208135,"question_id":56207091},{"owner":{"profile_image":"https://lh4.googleusercontent.com/-TOZn88n2VKE/AAAAAAAAAAI/AAAAAAAAAB0/4JaD2PaV67Q/photo.jpg?sz=256","account_id":15915815,"user_type":"registered","user_id":11484412,"link":"https://stackoverflow.com/users/11484412/konrad-neitzel","reputation":736,"display_name":"Konrad Neitzel"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":false,"last_activity_date":1558264589,"creation_date":1558264589,"body":"<p>That is something that you can easily find out yourself with a quick test:</p>\n\n<pre><code>import java.io.*;\n\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            ObjectOutputStream out1 = new ObjectOutputStream(new FileOutputStream(\"1.out\"));\n            out1.writeByte(100);\n            out1.close();\n\n            DataOutputStream out2 = new DataOutputStream(new FileOutputStream(\"2.out\"));\n            out2.writeByte(100);\n            out2.close();\n        } catch (Exception ex) {\n            ex.printStackTrace();\n        }\n    }\n}\n</code></pre>\n\n<p>When you run this code, then you will directly see the difference:\nThe file of the ObjectOutputStream is bigger. ObjectOutputStream writes a total of 7 bytes instead of just one Byte which the DataOutputStream is writing.</p>\n\n<p>The ObjectOutputStream is not just writing the core data. It is using the Java Object Serialization Stream Protocol which can be found at <a href=\"https://docs.oracle.com/javase/7/docs/platform/serialization/spec/protocol.html#10258\" rel=\"nofollow noreferrer\">https://docs.oracle.com/javase/7/docs/platform/serialization/spec/protocol.html#10258</a></p>\n","answer_id":56207251,"question_id":56207091},{"owner":{"profile_image":"https://www.gravatar.com/avatar/2f6ab62c3e49a54f45482d9886ed1043?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":7254915,"user_type":"registered","user_id":5533928,"link":"https://stackoverflow.com/users/5533928/susmit-agrawal","reputation":3689,"display_name":"Susmit Agrawal"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":true,"last_activity_date":1558182848,"creation_date":1558182848,"body":"<p>From <a href=\"https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html\" rel=\"nofollow noreferrer\">Oracle's docs</a>, in particular, from this line:</p>\n\n<blockquote>\n  <p>A scanner can read text from any object which implements the Readable interface. If an invocation of the underlying readable's Readable.read(java.nio.CharBuffer) method throws an IOException then the scanner assumes that the end of the input has been reached. The most recent IOException thrown by the underlying readable can be retrieved via the ioException() method.</p>\n</blockquote>\n\n<p>It appears that <code>Scanner</code> doesn't have its own buffer. It uses the buffer from the underlying object (that implements <code>Readable</code>), and uses regular expressions for parsing.</p>\n","answer_id":56198986,"question_id":56198945},{"owner":{"profile_image":"https://lh5.googleusercontent.com/-DSIW2cnH5Qo/AAAAAAAAAAI/AAAAAAAAAGE/Y0Mq-O3CTfY/photo.jpg?sz=256","account_id":15937551,"user_type":"registered","user_id":11500280,"link":"https://stackoverflow.com/users/11500280/andreas-hell","reputation":26,"display_name":"Andreas Hell"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1558138378,"creation_date":1558138378,"body":"<p>You could read single characters until you press Enter.</p>\n\n<pre><code>StringBuilder strBuilder = new StringBuilder();\nchar ch;\nwhile((ch = in.read()) != '\\n'){\n    strBuilder.append(ch);\n}\nString input = strBuilder.toString();\n</code></pre>\n","answer_id":56194946,"question_id":56170304},{"owner":{"profile_image":"https://www.gravatar.com/avatar/1d619fb425296fb2800c5d1548ab06f6?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":6353419,"user_type":"registered","user_id":4931630,"link":"https://stackoverflow.com/users/4931630/aterlux","reputation":4594,"display_name":"AterLux"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1558130237,"creation_date":1558125049,"body":"<p>Just do not add <code>\\n</code> before the last line:</p>\n\n<pre><code>    String text = \"\";\n    ...\n        String line = br.readLine();\n        boolean addNewLine = false; \n        while (line != null) {\n            if (addNewLine) {\n                text += \"\\n\";\n            } else {\n                addNewLine = true;\n            }\n            text += line;\n            line = br.readLine();\n        }\n</code></pre>\n\n<p>Also, for performance improvement, consider using a StringBuilder instead of the string concatenation:</p>\n\n<pre><code>    StringBuilder sb = new StringBuilder();\n    ...\n        String line = br.readLine();\n        boolean addNewLine = false; \n        while (line != null) {\n            if (addNewLine) {\n                sb.append('\\n');\n            } else {\n                addNewLine = true;\n            }\n            sb.append(line);\n            line = br.readLine();\n        }\n    ...\n    String text = sb.toString();\n</code></pre>\n","answer_id":56193184,"question_id":56192968,"last_edit_date":1558130237},{"owner":{"profile_image":"https://i.stack.imgur.com/gWAtc.png?s=256&g=1","account_id":8257109,"user_type":"registered","user_id":6209943,"link":"https://stackoverflow.com/users/6209943/red","reputation":16,"display_name":"Red"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1558125491,"creation_date":1558125491,"body":"<p>String.trim()</p>\n\n<blockquote>\n  <p>public String trim()  </p>\n  \n  <p>Returns a copy of the string, with leading and\n  trailing whitespace omitted. If this String object represents an empty\n  character sequence, or the first and last characters of character\n  sequence represented by this String object both have codes greater\n  than '\\u0020' (the space character), then a reference to this String\n  object is returned.</p>\n  \n  <p>Otherwise, if there is no character with a code greater than '\\u0020'\n  in the string, then a new String object representing an empty string\n  is created and returned.</p>\n  \n  <p>Otherwise, let k be the index of the first character in the string\n  whose code is greater than '\\u0020', and let m be the index of the\n  last character in the string whose code is greater than '\\u0020'. A\n  new String object is created, representing the substring of this\n  string that begins with the character at index k and ends with the\n  character at index m-that is, the result of this.substring(k, m+1).</p>\n  \n  <p>This method may be used to trim whitespace (as defined above) from the\n  beginning and end of a string.</p>\n  \n  <p>Returns: A copy of this string with leading and trailing white space\n  removed, or this string if it has no leading or trailing white space.</p>\n</blockquote>\n\n<p><a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#trim()\" rel=\"nofollow noreferrer\">https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#trim()</a></p>\n\n<p>Simply trim the string before you return it from read.</p>\n\n<pre><code>public static String read(String arquivo) {\n        String text = \"\";\n        try (BufferedReader br = new BufferedReader(new FileReader(arquivo))) {\n\n            String line = br.readLine();\n            while (line != null) {\n                text += line + \"\\n\";\n                line = br.readLine();\n            }\n\n        } catch (IOException e) {\n            System.err.println(e.getMessage());\n        }\n        return text.trim();\n    }\n</code></pre>\n","answer_id":56193259,"question_id":56192968},{"owner":{"profile_image":"https://i.stack.imgur.com/ujhav.png?s=256&g=1","account_id":11955653,"user_type":"registered","user_id":8748083,"link":"https://stackoverflow.com/users/8748083/robohrob","reputation":585,"display_name":"RobOhRob"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1558125134,"creation_date":1558125134,"body":"<p>Store all the strings in a list, then join on the line feed</p>\n\n<pre><code>public static void main( String[] args ) {\n    String text = read( \"in.txt\" );\n    write( text, \"out.txt\" );\n    System.out.println( \"Text created!\" );\n}\n\npublic static String read( String arquivo ) {\n    List&lt;String&gt; texts = new ArrayList&lt;&gt;();\n    try ( BufferedReader br = new BufferedReader( new FileReader( arquivo ) ) ) {\n\n        String line = br.readLine();\n        while ( line != null ) {\n            texts.add( line );\n            line = br.readLine();\n        }\n\n    } catch ( IOException e ) {\n        System.err.println( e.getMessage() );\n    }\n    return texts.stream().collect( Collectors.joining( \"\\n\" ) );\n}\n\npublic static void write( String text, String arquivo ) {\n    try ( BufferedWriter bw = new BufferedWriter( new FileWriter( arquivo ) ) ) {\n        bw.write( text );\n    } catch ( IOException e ) {\n        System.err.println( e.getMessage() );\n    }\n}\n</code></pre>\n","answer_id":56193201,"question_id":56192968},{"owner":{"profile_image":"https://i.stack.imgur.com/JMh8v.jpg?s=256&g=1","account_id":8918408,"user_type":"registered","user_id":6656050,"link":"https://stackoverflow.com/users/6656050/jeremy-kahan","reputation":3806,"display_name":"Jeremy Kahan"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1558124881,"creation_date":1558124881,"body":"<p>replace <code>write(text, \"out.txt\");</code> with </p>\n\n<pre><code>write(text.substring(0,text.length()-1), \"out.txt\");\n</code></pre>\n\n<p>which will remove the last character, which is the /n before writing.</p>\n","answer_id":56193159,"question_id":56192968},{"owner":{"profile_image":"https://i.stack.imgur.com/vapSh.jpg?s=256&g=1","account_id":8687130,"user_type":"registered","user_id":6501190,"link":"https://stackoverflow.com/users/6501190/java-addict301","reputation":3474,"display_name":"java-addict301","accept_rate":83},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1558124859,"creation_date":1558124859,"body":"<p>A good solution to this type of problem is to add the newline <em>before</em> you write each <em>additional</em> line:</p>\n\n<pre><code>String line = br.readLine();\ntext += line;\nwhile ((line = br.readLine()) != null) {\n    text = \"\\n\" + line;\n}\n</code></pre>\n\n<p>This way, you only add the newline for each additional line you write (no extraneous ones at the end).  Notice the assignment (plus null check) in the while loop).</p>\n","answer_id":56193155,"question_id":56192968},{"owner":{"profile_image":"https://lh3.googleusercontent.com/-fpwJIyZjOYI/AAAAAAAAAAI/AAAAAAAAADo/6yJZzs7InB8/photo.jpg?sz=256","account_id":15027359,"user_type":"registered","user_id":10846709,"link":"https://stackoverflow.com/users/10846709/sergey-bzhezitskiy","reputation":255,"display_name":"Sergey Bzhezitskiy"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":true,"last_activity_date":1558124527,"creation_date":1558124527,"body":"<p>please try this:</p>\n\n<pre><code>String line = br.readLine();\nwhile (line != null) {\n    text += line;\n    line = br.readLine();\n    if (line!=null){\n        text +=  \"\\n\";\n    }\n}\n</code></pre>\n\n<p>you can try this variant:</p>\n\n<pre><code>String line;\nwhile((line = br.readLine()) != null) {\n    text += line;\n    if (line!=null){\n        text +=  \"\\n\";\n    }\n}\n</code></pre>\n","answer_id":56193102,"question_id":56192968},{"owner":{"profile_image":"https://www.gravatar.com/avatar/ff34fb6e1f669ea05fedf4891d75f160?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":11805796,"user_type":"registered","user_id":8638323,"link":"https://stackoverflow.com/users/8638323/randhawa","reputation":226,"display_name":"Randhawa"},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1519102691,"creation_date":1519102691,"body":"<p>Reason for infinite loop is pointer(can be said position) which Scanner keeps to access the element and after accessing the element, pointer is advanced.\n<br><br>\nBut When any of Scanner Method (i.e. , <code>next()</code> , <code>nextDouble()</code> ),throws an exception, you are still at the same position/pointer at which Scanner tried to access the element and exception has been thrown.\n<br><br>\nAs you are already catching the Exception in <code>catch</code> statement but the pointer is still there (at the same position) which will continuously throw an exception, to avoid this, you must advance the pointer using <code>.nextLine()</code>. which will move pointer to next line for accepting next Input.</p>\n","answer_id":48878128,"question_id":48877659},{"owner":{"profile_image":"https://www.gravatar.com/avatar/9e435c7b3e6aa022f1f9325285667d74?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":1008820,"user_type":"registered","user_id":9070710,"link":"https://stackoverflow.com/users/9070710/moh-ro","reputation":86,"display_name":"moh ro"},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1519101056,"creation_date":1519101056,"body":"<p>Scanner maintains a position variable. </p>\n\n<pre><code>// The index into the buffer currently held by the Scanner\nprivate int position;\n</code></pre>\n\n<p>In case of the exception the position value doesn't get updated and the scanner keeps trying to read from the same position containing your invalid token.</p>\n\n<pre><code>in.nextLine()\n</code></pre>\n\n<p>The above line moves the position variable past the incorrect token and is ready to read fresh data in the buffer.</p>\n","answer_id":48877881,"question_id":48877659},{"owner":{"profile_image":"https://www.gravatar.com/avatar/ebbe93061752af50381348fafb4cb499?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":434479,"user_type":"registered","user_id":9080015,"link":"https://stackoverflow.com/users/9080015/curlybraces","reputation":1095,"display_name":"curlyBraces"},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":true,"last_activity_date":1519100377,"creation_date":1519100055,"body":"<p>From <a href=\"https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextDouble()\" rel=\"nofollow noreferrer\">Scanner javadoc</a>:</p>\n\n<blockquote>\n  <p>Scans the next token of the input as a double. This method will throw\n  InputMismatchException if the next token cannot be translated into a\n  valid double value. If the translation is successful, the scanner\n  advances past the input that matched.</p>\n</blockquote>\n\n<p>So as MFisherKDX commented, the scanner advances <em>only</em> if the input is a valid double. Hence, the token has to be skipped programmatically.</p>\n","answer_id":48877744,"question_id":48877659,"last_edit_date":1519100377},{"owner":{"profile_image":"https://i.stack.imgur.com/ACdqv.png?s=256&g=1","account_id":6979720,"user_type":"registered","user_id":5353128,"link":"https://stackoverflow.com/users/5353128/kaushal28","reputation":5387,"display_name":"Kaushal28","accept_rate":73},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1519100072,"creation_date":1519100072,"body":"<p>So what <code>in.nextLine();</code> does is consume the new line left over. In your case, when exception occurs, this is not performed and your code goes in infinite loop.  </p>\n\n<p>So either <code>in.nextDouble()</code> or <code>in.nextLine()</code> require to consume the line left over.</p>\n","answer_id":48877749,"question_id":48877659},{"owner":{"profile_image":"https://www.gravatar.com/avatar/bb75c57d633d38c62e7029b4d7eb0ce7?s=256&d=identicon&r=PG","account_id":41920,"user_type":"registered","user_id":121993,"link":"https://stackoverflow.com/users/121993/jeff-storey","reputation":56500,"display_name":"Jeff Storey","accept_rate":77},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":true,"last_activity_date":1518970189,"creation_date":1518970189,"body":"<p><code>raf.setLength</code> calls <code>seek</code> under the hood, which is a native function, so it's not clear if the operation is actually cancellable through an interrupt or by other means.</p>\n\n<p>Can you chunk the creation of the file yourself, something like:</p>\n\n<pre><code>final long size = 10000000000L;\nfinal File file = new File(\"d://file.mp4\");\nvolatile boolean cancelled = false;\n\nThread t = new Thread(new Runnable() {\n    @Override\n    public void run() {\n        long bytesRemaining = size;\n        long currentSize = 0;\n        RandomAccessFile raf = new RandomAccessFile(file, \"rw\");\n        try {\n            while ( bytesRemaining &gt; 0 &amp;&amp; !cancelled ) {\n                // !!!THIS IS NOT EXACTLY CORRECT SINCE\n                // YOU WILL NEED TO HANDLE EDGE CONDITIONS\n                // AS YOU GET TO THE END OF THE FILE.\n                // IT IS MEANT AS AN ILLUSTRATION ONLY!!!\n                currentSize += CHUNK_SIZE; // you decide how big chunk size is\n                raf.setLength(currentSize);\n                bytesRemaining -= CHUNK_SIZE \n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n});\nt.start();\n\n// some other thread could cancel the writing by setting the cancelled flag\n</code></pre>\n\n<p>Disclaimer: I don't know what kind of performance this will have at the size files you are creating. It will likely have some overhead for each call to seek. Try it out, and see what performance looks like.</p>\n","answer_id":48853729,"question_id":48853563},{"owner":{"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=256&d=identicon&r=PG","account_id":71739,"user_type":"registered","user_id":207421,"link":"https://stackoverflow.com/users/207421/user207421","reputation":307163,"display_name":"user207421","accept_rate":82},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":true,"last_activity_date":1518935788,"creation_date":1518935788,"body":"<p>Because you are appending to the file:</p>\n\n<pre><code>new FileWriter(fileName, true)\n</code></pre>\n\n<p>That's what the <code>true</code> parameter does.</p>\n","answer_id":48849117,"question_id":48848515},{"owner":{"profile_image":"https://i.stack.imgur.com/Gl8tt.png?s=256&g=1","account_id":9432667,"user_type":"registered","user_id":7015661,"link":"https://stackoverflow.com/users/7015661/tm00","reputation":1340,"display_name":"TM00","accept_rate":100},"content_license":"CC BY-SA 3.0","score":-1,"is_accepted":false,"last_activity_date":1518934473,"creation_date":1518934099,"body":"<p>In order to replace data in your file, you must read it, replace the data and write the new data out.</p>\n\n<p>One way to do this is as illustrated in <a href=\"https://stackoverflow.com/a/20040289/7015661\">this answer</a>. Which is briefly outlined below:</p>\n\n<pre><code>    // Read all the data\n    BufferedReader file = new BufferedReader(new FileReader(\"data.txt\"));\n    String line;\n    StringBuffer inputBuffer = new StringBuffer();\n\n    while ((line = file.readLine()) != null) {\n        inputBuffer.append(line);\n        inputBuffer.append('\\n');\n    }\n    String inputStr = inputBuffer.toString();\n\n    file.close();\n\n   // Replace your string code goes here.....\n\n  // Then write all the updated data back\n\n    FileOutputStream fileOut = new FileOutputStream(\"notes.txt\");\n    fileOut.write(inputStr.getBytes());\n    fileOut.close();\n</code></pre>\n\n<p>Regarding the duplication:</p>\n\n<p>It might be a case of how you update your <code>ArrayList</code>. May I suggest that you print the list before writing the file to check that it is not a duplicate entry? If it is then it is not an file-writing issue but a data updating issue. Then you must ensure that you are updating the <code>BikePart</code> in the list instead of adding it again.</p>\n","answer_id":48848976,"question_id":48848515,"last_edit_date":1518934473},{"owner":{"profile_image":"https://www.gravatar.com/avatar/186f36b0a1b1fe14e690cd2bfab8a324?s=256&d=identicon&r=PG","account_id":1049814,"user_type":"registered","user_id":1054021,"link":"https://stackoverflow.com/users/1054021/tobb","reputation":11925,"display_name":"Tobb","accept_rate":81},"content_license":"CC BY-SA 3.0","score":2,"is_accepted":false,"last_activity_date":1518629340,"creation_date":1518628935,"body":"<p>You can use Mockito, here is an example test:</p>\n\n<pre><code>@Test\npublic void test() {\n    final File file = mock(File.class);\n    when(file.exists()).thenReturn(true);\n    doThrow(new SecurityException(\"fail\")).when(file).delete();\n\n    if (file.exists()) {\n        file.delete(); //throws java.lang.SecurityException: fail\n    }\n}\n</code></pre>\n\n<p>But I see that the <code>new File</code> is part of your method under test? Then, one solution (which is not too pretty) is to extract the line where the File is created to a package-local method, and then stub it out.</p>\n\n<pre><code>public class SomeClass {\n    public void someMethod(final String path) {\n        final File file = createFile(path);\n\n        if (newFile.exists()) {\n            if (!newFile.delete()) {\n                final String msg = \"Error deleting file \" + newFile.getAbsolutePath();\n                LOG.error(msg);\n            }\n        }\n    }\n\n    File createFile(final String path) {\n        return new File(path);\n    }\n}\n</code></pre>\n\n<p>Then test like this:</p>\n\n<pre><code>public class SomeClassTest {\n    private SomeClass someClass;\n\n    @Before\n    public void setup() {\n        someClass = spy(new SomeClass());\n    }\n\n    @Test\n    public void someTest() {\n        final File file = mock(File.class);\n        doReturn(file).when(someClass).createFile(\"path\");\n        //set up behaviour of mocked File            \n\n        someClass.someMethod(\"path\");\n        //verify and whatnot\n    }\n}\n</code></pre>\n","answer_id":48792927,"question_id":48792823,"last_edit_date":1518629340},{"owner":{"profile_image":"https://i.stack.imgur.com/gKLfe.png?s=256&g=1","account_id":2889245,"user_type":"registered","user_id":2478398,"link":"https://stackoverflow.com/users/2478398/beundead","reputation":3533,"display_name":"BeUndead"},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":true,"last_activity_date":1518629138,"creation_date":1518629138,"body":"<p>A couple of options which come to mind.  These depend on the circumstances of your method (do you pass the <code>File</code> instance to the method?  Is the name of the file predictable?)</p>\n\n<ul>\n<li><p>If you pass the <code>File</code> instance to the method, you can simply mock it with mockito.</p></li>\n<li><p>If you don't pass the <code>File</code> instance to the method, you can use PowerMockito's <code>whenNew</code> to return a mocked instance when the <code>new File</code> part is called.</p></li>\n<li><p>If you know ahead of time what the filename will be; most OSes will stop you deleting the <code>File</code> simply by having an open handle to it.  For example, in your test have:</p>\n\n<pre><code>try (new FileInputStream(new File(predictableFileName))) {\n    myThing.methodToTest();\n}\n</code></pre></li>\n</ul>\n","answer_id":48792978,"question_id":48792823},{"owner":{"profile_image":"https://lh5.googleusercontent.com/-LmK0RZUd2tI/AAAAAAAAAAI/AAAAAAAAAGM/YTCd7hkkvZg/photo.jpg?sz=256","account_id":12920357,"user_type":"registered","user_id":9343066,"link":"https://stackoverflow.com/users/9343066/jo%c3%a3o-gon%c3%a7alves","reputation":197,"display_name":"Jo&#227;o Gon&#231;alves"},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1518628908,"creation_date":1518628908,"body":"<p>The best way... is way relative to each one's opinion.</p>\n\n<p>This depends a lot on what you want to test, from what I saw, I would most probably have multiple tests, but one of them would surely be lock the file by opening a stream to it and let the normal behaviour send the exception.</p>\n\n<p>But as I said, this depends a lot on each one's opinion</p>\n","answer_id":48792918,"question_id":48792823},{"owner":{"profile_image":"https://www.gravatar.com/avatar/3738ece95dc55ff4bd337d3fdd27f8f8?s=256&d=identicon&r=PG","account_id":146201,"user_type":"registered","user_id":356514,"link":"https://stackoverflow.com/users/356514/agemen","reputation":1525,"display_name":"Agemen","accept_rate":0},"content_license":"CC BY-SA 3.0","score":17,"is_accepted":true,"last_activity_date":1518595146,"creation_date":1304517212,"body":"<p>While using the constructor with the empty String, you create a File instance that has two properties : </p>\n\n<ul>\n<li>It does not actually exists.</li>\n<li>Its absolute pathname is the \"empty abstract pathname\"</li>\n</ul>\n\n<p>When using File(\".\"), you create a different file :</p>\n\n<ul>\n<li>It DOES exist on the file system</li>\n<li>Its absolute pathname contains the \".\" character</li>\n</ul>\n\n<p>This second file exists, not the first. The second file is consequently the only one that is supposed to respect the rule explained in getCanonicalPath :</p>\n\n<blockquote>\n  <p>Every pathname that denotes an existing file or directory has a unique canonical form.</p>\n</blockquote>\n\n<p>As the first file is not real, the fact that their canonical paths are equal is meaningless.</p>\n\n<p>Consequently, the behviour you've pointed is not a bug. It's the one we expected from the JVM.</p>\n\n<p><a href=\"https://docs.oracle.com/javase/6/docs/api/java/io/File.html\" rel=\"nofollow noreferrer\" title=\"File Javadoc\">You'll find all the infos in the javadoc</a></p>\n","answer_id":5884502,"question_id":5883808,"last_edit_date":1518595146},{"owner":{"profile_image":"https://www.gravatar.com/avatar/8fced76a6c2873cbfaee38a1f7d69fd8?s=256&d=identicon&r=PG","account_id":21804,"user_type":"registered","user_id":53300,"link":"https://stackoverflow.com/users/53300/daveh","reputation":7207,"display_name":"DaveH","accept_rate":53},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1518134285,"creation_date":1409354644,"body":"<p>Your <code>setChar()</code> method says that it can throw an IOException, but your second constructor does not handle it.</p>\n\n<p>You either need to change the setChar() methods signature to not throw the exception (as, in fact, it doesn't throw an IOException), or get you constructor to handle it, for example ...</p>\n\n<pre><code>  public Scanner(String inString)\n  {\n      in = new BufferedReader(new StringReader(inString));\n      done = false;\n      try {\n          setChar();\n      } \n      catch (IOException ie){\n          System.exit(1)\n      }\n  }\n</code></pre>\n","answer_id":25577466,"question_id":25577398,"last_edit_date":1518134285},{"owner":{"profile_image":"https://www.gravatar.com/avatar/39f8fb0dea08e774038cfa118caf5642?s=256&d=identicon&r=PG","account_id":1364609,"user_type":"registered","user_id":9323851,"link":"https://stackoverflow.com/users/9323851/ajwgeek","reputation":141,"display_name":"AJWGeek"},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":true,"last_activity_date":1517945446,"creation_date":1517945446,"body":"<p>Java's <a href=\"https://docs.oracle.com/javase/7/docs/api/java/io/RandomAccessFile.html\" rel=\"nofollow noreferrer\">RandomAccessFile</a> has two useful methods, <a href=\"https://docs.oracle.com/javase/7/docs/api/java/io/RandomAccessFile.html#getFilePointer()\" rel=\"nofollow noreferrer\">getFilePointer()</a> and <a href=\"https://docs.oracle.com/javase/7/docs/api/java/io/RandomAccessFile.html#length()\" rel=\"nofollow noreferrer\">length()</a>. Whenever getFilePointer() is less than length(), there is data available to read.</p>\n\n<pre><code>try {\n    RandomAccessFile raf = new RandomAccessFile(\"ClassList.dat\", \"r\");\n    while (raf.getFilePointer() &lt; raf.length()) {\n        System.out.println(raf.readUTF());\n        System.out.println(raf.readInt());\n        System.out.println(raf.readDouble());\n        System.out.println(raf.readDouble());\n        System.out.println(raf.readDouble());\n    }\n    raf.close();\n} catch (Exception e) {\n    e.printStackTrace();\n}\n</code></pre>\n","answer_id":48650560,"question_id":48650358},{"owner":{"profile_image":"https://www.gravatar.com/avatar/997fd46a92230cffbbbcd0513f594d14?s=256&d=identicon&r=PG","account_id":2606438,"user_type":"registered","user_id":2257528,"link":"https://stackoverflow.com/users/2257528/farkas-istv%c3%a1n","reputation":524,"display_name":"Farkas Istv&#225;n","accept_rate":50},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1487451975,"creation_date":1487451975,"body":"<p>Take your time and read Effective Java (2nd Edition) book form Joshua Bloch. \nItem 57 (Use exceptions only for exceptional conditions) in chapter Exceptions will clarify everything in this topic.</p>\n","answer_id":42320691,"question_id":42320415},{"owner":{"profile_image":"https://i.stack.imgur.com/j6vwr.jpg?s=256&g=1","account_id":9585294,"user_type":"registered","user_id":7118307,"link":"https://stackoverflow.com/users/7118307/pavlo-plynko","reputation":586,"display_name":"Pavlo Plynko","accept_rate":100},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1487450756,"creation_date":1487450756,"body":"<p>In <code>catch</code> instead <code>// exception handled here</code> you can write any code you want.\nIf you just throwing exception - java itself doing some standart things.</p>\n","answer_id":42320507,"question_id":42320415},{"owner":{"profile_image":"https://i.stack.imgur.com/zw18i.png?s=256&g=1","account_id":1663234,"user_type":"registered","user_id":1531124,"link":"https://stackoverflow.com/users/1531124/ghostcat","reputation":138406,"display_name":"GhostCat","accept_rate":96},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":true,"last_activity_date":1487450520,"creation_date":1487450520,"body":"<p>Exceptions make it easier to deal with errors programmatically.</p>\n\n<p>Meaning: when your program only consists of a main function, and you want to tell the user about \"a file is not there\"; then it doesn't make too much of a difference, if your program prints a reasonable message to stderr; and then exists with some non-zero return code; or if you throw an exception.</p>\n\n<p>To the contrary; in your simple example; having <strong>one</strong> precise error message is actually to be preferred over throwing an exception and having the JVM print a (potentially confusing) stack trace to the user.</p>\n\n<p><strong>But</strong>: your current program is just a small example thing. As soon as things grow bigger, your program consists of calls to many different classes in different components. And then printing to stderr isn't a good idea any more. Then you want to make sure that one layer that runs into a problem has a defined way to communicate this situation; and that is what exceptions are meant for. In such situations, you very much prefer exceptions; because some higher layer can catch them - to then decide what to do. For example the program could decide to show the error message on some UI panel; or to put a message into a log file; or to send a text message to some mobile phone. All of that would be close to impossible, if you only printed to stderr.</p>\n","answer_id":42320475,"question_id":42320415},{"owner":{"profile_image":"https://i.stack.imgur.com/9jcdA.jpg?s=256&g=1","account_id":4599766,"user_type":"registered","user_id":3730847,"link":"https://stackoverflow.com/users/3730847/fazal","reputation":3404,"display_name":"Fazal","accept_rate":17},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1487325959,"creation_date":1487325959,"body":"<p>Check your file name. It should not contain any colon <code>:</code> or any other similar character , which throws exception.</p>\n","answer_id":42295011,"question_id":9965875},{"owner":{"profile_image":"https://www.gravatar.com/avatar/cf505c9af73357aad874f83044c8551c?s=256&d=identicon&r=PG","account_id":57685,"user_type":"registered","user_id":172821,"link":"https://stackoverflow.com/users/172821/ddyer","reputation":1790,"display_name":"ddyer","accept_rate":40},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1487273605,"creation_date":1487273605,"body":"<p>Applets can't access the local file system.  This will be fixed\nin the near future, when applets will not exist at all.  Thanks Oracle!</p>\n","answer_id":42283047,"question_id":42266587},{"owner":{"profile_image":"https://i.stack.imgur.com/t4UTn.jpg?s=256&g=1","account_id":4787547,"user_type":"registered","user_id":3867574,"link":"https://stackoverflow.com/users/3867574/serg-m-ten","reputation":5568,"display_name":"Serg M Ten","accept_rate":43},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1487263793,"creation_date":1487263793,"body":"<p>You can do something like this</p>\n\n<pre><code>public void nioAsyncParse(AsynchronousSocketChannel channel, final int bufferSize) throws IOException, ParseException, InterruptedException {\n    ByteBuffer byteBuffer = ByteBuffer.allocate(bufferSize);\n    BufferConsumer consumer = new BufferConsumer(byteBuffer, bufferSize);\n    channel.read(consumer.buffer(), 0l, channel, consumer);\n}\n\n\nclass BufferConsumer implements CompletionHandler&lt;Integer, AsynchronousSocketChannel&gt; {\n\n        private ByteBuffer bytes;\n        private StringBuffer chars;\n        private int limit;\n        private long position;\n        private DateFormat frmt = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n\n        public BufferConsumer(ByteBuffer byteBuffer, int bufferSize) {\n            bytes = byteBuffer;\n            chars = new StringBuffer(bufferSize);\n            frmt = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n            limit = bufferSize;\n            position = 0l;\n        }\n\n        public ByteBuffer buffer() {\n            return bytes;\n        }\n\n        @Override\n        public synchronized void completed(Integer result, AsynchronousSocketChannel channel) {\n\n            if (result!=-1) {\n                bytes.flip();\n                final int len = bytes.limit();\n                int i = 0;\n                try {\n                    for (i = 0; i &lt; len; i++) {\n                        byte by = bytes.get();\n                        if (by=='\\n') {\n                            // ***\n                            // The code used to process the line goes here\n                            // ***\n                            chars.setLength(0);\n                        }\n                        else {\n                            chars.append((char) by);\n                        }\n                    }\n                }\n                catch (Exception x) {\n                    System.out.println(\"Caught exception \" + x.getClass().getName() + \" \" + x.getMessage() + \" i=\" + String.valueOf(i) + \", limit=\" + String.valueOf(len) + \", position=\"+String.valueOf(position));\n                }\n\n                if (len==limit) {\n                    bytes.clear();\n                    position += len;\n                    channel.read(bytes, position, channel, this);\n                }\n                else {\n                    try {\n                        channel.close();\n                    }\n                    catch (IOException e) { }\n                    bytes.clear();\n                    buffers.add(bytes);\n                }\n            }\n            else {\n                try {\n                    channel.close();\n                }\n                catch (IOException e) { }\n                bytes.clear();\n                buffers.add(bytes);\n            }\n        }\n\n        @Override\n        public void failed(Throwable e, AsynchronousSocketChannel channel) {\n        }\n};\n</code></pre>\n","answer_id":42280055,"question_id":37545236},{"owner":{"profile_image":"https://www.gravatar.com/avatar/7d187da7adbfd165fc4cfd2f429ffe28?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":3551414,"user_type":"registered","user_id":2966204,"link":"https://stackoverflow.com/users/2966204/ecarlos","reputation":209,"display_name":"ecarlos"},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1487116971,"creation_date":1487116971,"body":"<p>The lenient decoding should actually be done by <code>FileReader</code>. I can't find any part of the documentation that specifies this, but digging into its code it uses <code>onMalformedInput(CodingErrorAction.REPLACE)</code> too. I'm not sure if it can be trusted to be the same way in all JDK implementations though.</p>\n","answer_id":42238497,"question_id":42045098},{"owner":{"profile_image":"https://www.gravatar.com/avatar/60f290f6de71b6b69030583169d3fdaf?s=256&d=identicon&r=PG","account_id":201896,"user_type":"registered","user_id":448625,"link":"https://stackoverflow.com/users/448625/caner","reputation":57765,"display_name":"Caner","accept_rate":96},"content_license":"CC BY-SA 3.0","score":2,"is_accepted":false,"last_activity_date":1487113356,"creation_date":1487112942,"body":"<p>You want to skip 1 line but this will skip two lines:</p>\n\n<pre><code>for(int i = 0; i &lt;= 1; i++)\n</code></pre>\n\n<p>Also your code is unnecessarily complicated, something like this is easier to follow:</p>\n\n<pre><code>String line = br.readLine(); // read first line\nbr.readLine(); // skip 2nd line\nwhile((line = br.readLine()) != null) // read the rest till the end\n{\n    System.out.println(line);\n    Player pl = new Player(line);\n    data.add(pl);\n}\n</code></pre>\n","answer_id":42237754,"question_id":42237722,"last_edit_date":1487113356},{"owner":{"profile_image":"https://i.stack.imgur.com/duk1R.png?s=256&g=1","account_id":1890132,"user_type":"registered","user_id":1794706,"link":"https://stackoverflow.com/users/1794706/anacron","reputation":6513,"display_name":"anacron"},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":true,"last_activity_date":1486796237,"creation_date":1486796237,"body":"<p>I changed the <code>if</code> condition in the <code>insert</code> method. The file is not expected to exist. So ideally the condition should not be negated. I used the following code and it is working for me.</p>\n\n<pre><code>public class InsertToWriteTo {\n\n    public static void main(String[] args) {\n        boolean ret = insert(\"\\\"hello\\\"\", \"college\", \"student\");\n        System.out.println(ret);\n    }\n\n    public static boolean insert(String string, String DBName, String tableName) {\n        try {\n            string = string.substring(string.indexOf('\"') + 1, string.lastIndexOf('\"')); // removes quotes\n\n            File tableToWriteTo = new File(DBName + \"/\" + tableName + \".txt\");\n            if (tableToWriteTo.exists()) { // changed condition\n                System.out.println(\"File exists\");\n                return false;\n            }\n\n            PrintWriter writer = new PrintWriter(new FileWriter(tableToWriteTo, true));\n            writer.println(string);\n            writer.close();\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Hope this helps!</p>\n","answer_id":42173224,"question_id":42172869},{"owner":{"profile_image":"https://graph.facebook.com/100005137569756/picture?type=large","account_id":5130554,"user_type":"registered","user_id":4110915,"link":"https://stackoverflow.com/users/4110915/jenna-maiz","reputation":792,"display_name":"Jenna Maiz","accept_rate":34},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1459527205,"creation_date":1459527205,"body":"<p>What you are working with is a FASTA file. Give <a href=\"http://www.bioperl.org/wiki/Main_Page\" rel=\"nofollow\">BioPerl</a> a try...there are tons of libraries to parse and work with these kinds of files. Whatever you are doing, it is most likely done already....</p>\n","answer_id":36361035,"question_id":32830018},{"owner":{"profile_image":"https://graph.facebook.com/677633751/picture?type=large","account_id":4364434,"user_type":"registered","user_id":3560646,"link":"https://stackoverflow.com/users/3560646/eliott-roynette","reputation":726,"display_name":"Eliott Roynette","accept_rate":67},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1443533636,"creation_date":1443533636,"body":"<p>I think your problem come from the addition of string on text. You should use a <code>StringBuffer</code> instead. I also advice you to use a <code>Scanner</code> class instead of <code>FileReader</code> :</p>\n\n<pre><code>public String createLocalFile(String path)\n{   \n    StringBuffer text = new StringBuffer();\n    try\n    {\n        Scanner sc = new Scanner( new File(path) );\n        while( sc.hasNext() )\n        {\n            String currentLine = sc.nextLine();\n            text.append(currentLine);\n            System.out.println( currentLine );\n        }\n\n    }\n    catch(IOException ex)\n    {\n        System.out.println(ex.getMessage());\n    }\n    return text.toString();\n}\n</code></pre>\n\n<p>That should be much faster.</p>\n","answer_id":32845402,"question_id":32830018},{"owner":{"profile_image":"https://www.gravatar.com/avatar/1182b1d5518a596d4e8cfe0567a65c4d?s=256&d=identicon&r=PG","account_id":2792262,"user_type":"registered","user_id":2402272,"link":"https://stackoverflow.com/users/2402272/john-bollinger","reputation":163877,"display_name":"John Bollinger","accept_rate":85},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1443469848,"creation_date":1443469848,"body":"<p>Supposing that your VM has enough heap assigned to it, you can load the raw file into memory like so:</p>\n\n<pre><code>public byte[] loadFile(File f) throws IOException {\n    long size = f.length();\n    InputStream source;\n    byte[] bytes;\n    int nread;\n    int next;\n\n    if (size &gt; Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"file to long\");\n    }\n    bytes = new byte[(int)size];\n\n    source = new FileInputStream(f);\n\n    for (next = 0; next &lt; bytes.length; next += nread) {\n        nread = source.read(bytes, next, bytes.length - next);\n        if (nread &lt; 0) {\n            throw new FileTruncatedWhileReadingItException();\n            // or whatever ...\n        }\n    }\n    if (source.read() != -1) {\n        throw new FileExtendedWhileReadingItException(); \n        // or whatever ...\n    }\n\n    return bytes;\n}\n</code></pre>\n\n<p>You can then process that in-memory copy instead of reading from disk by creating a <code>ByteArrayInputStream</code> around it -- you should be able to plug that in to your existing code with relative ease.</p>\n\n<p>There may be other ways to optimize still more.  For example, if processing the data necessarily involves decoding them into characters, then you could cache the results of the decoding by using a <code>Reader</code> to read into a <code>char[]</code> instead of an <code>InputStream</code> to read into a <code>byte[]</code>, and then by proceeding similarly.  Do note, however, that storing ASCII data in <code>char</code> form takes twice as much space as storing it in <code>byte</code> form.</p>\n\n<p>If the data are suitable, then it would probably be useful to perform a full parse into some more sophisticated data structure, such as a <code>Map</code>, which could make the subsequent lookups extremely fast.  The price, of course, is even more memory usage.</p>\n","answer_id":32830686,"question_id":32830018},{"owner":{"profile_image":"https://www.gravatar.com/avatar/eccdcef378f17549482325c2051c4048?s=256&d=identicon&r=PG","account_id":2482826,"user_type":"registered","user_id":2161954,"link":"https://stackoverflow.com/users/2161954/snakedoc","reputation":13761,"display_name":"SnakeDoc","accept_rate":93},"content_license":"CC BY-SA 3.0","score":2,"is_accepted":false,"last_activity_date":1443468863,"creation_date":1443468010,"body":"<p>You are certainly on the right track thinking you should read this into memory and access it via some sort of mapping. This will remove a lot of the bottleneck, namely being disk I/O and access time (memory is much faster).</p>\n\n<p>I would recommend reading the data into a <code>HashMap</code> with the ID being the key and the Text being the value.</p>\n\n<p>Try something like:</p>\n\n<pre><code>public Map&lt;Integer, String&gt; getIdMap(final String pathToFile) throws IOException {\n    // we'll use this later to store our mappings\n    final Map&lt;Integer, String&gt; map = new HashMap&lt;Integer, String&gt;();\n    // read the file into a String\n    final String rawFileContents = new String(Files.readAllBytes(Paths.get(pathToFile)));\n    // assumes each line is an ID + value\n    final String[] fileLines = rawFileContents.split(System.getProperty(\"line.separator\"));\n    // iterate over every line, and create a mapping for the ID to Value\n    for (final String line : fileLines) {\n        Integer id = null;\n        try {\n            // assumes the id is part 1 of a 2 part line in CSV \",\" format\n            id = Integer.parseInt(line.split(\",\")[0]);\n        } catch (NumberFormatException e) {\n            e.printStackTrace();\n        }\n        // assumes the value is part 2 of a 2 part line in CSV \",\" format\n        final String value = line.split(\",\")[1];\n        // put the pair into our map\n        map.put(id, value);\n    }\n    return map;\n}\n</code></pre>\n\n<p>This will read the file into memory (in a String), then cut it up into a <code>Map</code> so that it's easy to retrieve the values, ex: </p>\n\n<pre><code>Map&lt;Integer, String&gt; map = getIdMap(\"/path/to/file\");\nfinal String theText = map.get(theId);\nSystem.out.println(theText);\n</code></pre>\n\n<p>This sample code is untested, and makes some assumptions about your file format, namely that it's one ID and value per line, and that they ID's and Values are comma separated (CSV). Of course, if your data is structured a little differently, just tweak to taste.</p>\n\n<p>UPDATED to match your file description:</p>\n\n<pre><code>public Map&lt;String, String&gt; getIdMap(final String pathToFile) throws IOException {\n    // we'll use this later to store our mappings\n    final Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();\n    // read the file into a String\n    final String rawFileContents = new String(Files.readAllBytes(Paths.get(pathToFile)));\n    // assumes each line is an ID + value\n    final String[] fileLines = rawFileContents.split(System.getProperty(\"line.separator\"));\n    // iterate over every line, and create a mapping for the ID to Value\n    for (final String line : fileLines) {\n        // get the id and remove the leading '&gt;' symbol\n        final String id = line.split(\" \")[0].replace(\"&gt;\", \"\").trim();\n        // use the key 'transcript_biotype:' to get the 'IG_D_gene' value\n        final String value = line.split(\"transcript_biotype:\")[1].trim();\n        // put the pair into our map\n        map.put(id, value);\n    }\n    return map;\n}\n</code></pre>\n","answer_id":32830247,"question_id":32830018,"last_edit_date":1443468863},{"owner":{"profile_image":"https://i.stack.imgur.com/PKXU2.jpg?s=256&g=1","account_id":5876997,"user_type":"registered","user_id":4627552,"link":"https://stackoverflow.com/users/4627552/clyde-dcruz","reputation":1925,"display_name":"Clyde D&#39;Cruz","accept_rate":65},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1443468377,"creation_date":1443467345,"body":"<p>If the file contains a collection of records , then you can <br>1.Create a class that has id and text content attributes.<br>2.Read each record from the file and create an object from it and add it to a HashMap.<br>3. Use the HashMap to retrieve objects by ID</p>\n","answer_id":32830087,"question_id":32830018,"last_edit_date":1443468377},{"owner":{"profile_image":"https://www.gravatar.com/avatar/4ff9e2dc61d838406cad1fa4ef638cf4?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":6241663,"user_type":"registered","user_id":5379657,"link":"https://stackoverflow.com/users/5379657/jeff-y","reputation":2456,"display_name":"Jeff Y"},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1443467837,"creation_date":1443467837,"body":"<p>Agreeing with most other comments. 60 MB is not too large for today's memories. But where the time is being sucked is almost certainly in that \"+=\" appending each line to an increasingly monstrous single string. Make an array of lines.</p>\n\n<p>Better yet, separate out the ID text and the \"related text\" while reading, to make the later ID searching faster. A hash table would be ideal.</p>\n","answer_id":32830202,"question_id":32830018},{"owner":{"profile_image":"https://www.gravatar.com/avatar/0c8b696e72e2fef13db59a57457406f7?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":4864796,"user_type":"registered","user_id":3923424,"link":"https://stackoverflow.com/users/3923424/r2b2","reputation":1551,"display_name":"R2B2","accept_rate":86},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1409354683,"creation_date":1409354683,"body":"<p><code>setChar();</code> in your constructor throws an <code>IOException</code>.</p>\n\n<p>Therefore, you must catch it in your constructor, or your constructor have to throw an <code>IOException</code> as well.</p>\n\n<p>However, you don't even need to add <code>throws IOException</code> after the declaration of the <code>setChar()</code> method since you are catching potential exceptions inside it.</p>\n","answer_id":25577468,"question_id":25577398},{"owner":{"profile_image":"https://i.stack.imgur.com/BUmKz.jpg?s=256&g=1","account_id":4878731,"user_type":"registered","user_id":3933089,"link":"https://stackoverflow.com/users/3933089/chiastic-security","reputation":20470,"display_name":"chiastic-security","accept_rate":67},"content_license":"CC BY-SA 3.0","score":3,"is_accepted":true,"last_activity_date":1409354551,"creation_date":1409354551,"body":"<p>Your <code>Scanner</code> constructor can throw an <code>IOException</code>, because it's calling <code>setChar()</code>, and that can throw it.</p>\n\n<p>You must either declare your constructor as throwing the exception, or catch the exception in your constructor and deal with it.</p>\n","answer_id":25577455,"question_id":25577398},{"owner":{"profile_image":"https://www.gravatar.com/avatar/a6a3498ebb173fb2373fded6f46d65fd?s=256&d=identicon&r=PG","account_id":1307217,"user_type":"registered","user_id":1255956,"link":"https://stackoverflow.com/users/1255956/chris","reputation":18294,"display_name":"Chris","accept_rate":86},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1371920743,"creation_date":1371920743,"body":"<pre><code>FileUtils.cleanDirectory(new File(\"/usr/share/test\")); //linux\n\nFileUtils.cleanDirectory(new File(\"C:\\\\test\")); //windows\n</code></pre>\n","answer_id":17253225,"question_id":3355746},{"owner":{"profile_image":"https://i.stack.imgur.com/4OArJ.jpg?s=256&g=1","account_id":1064245,"user_type":"registered","user_id":1065197,"link":"https://stackoverflow.com/users/1065197/luiggi-mendoza","reputation":85256,"display_name":"Luiggi Mendoza","accept_rate":88},"content_license":"CC BY-SA 3.0","score":2,"is_accepted":false,"last_activity_date":1333297499,"creation_date":1333297499,"body":"<p>After some test, I've found the mistake and correct it:</p>\n\n<pre><code>try {\n    //create tmpDir if its null\n    if (tmpDir == null) {\n        String environmentHomePath = \"D:/\"; //change to somepath\n        //tmpDir must be a directory path\n        tmpDir = new File(environmentHomePath);\n\n        if (!tmpDir.exists() || !tmpDir.isDirectory()) {\n            boolean mkdirSucceeded = tmpDir.mkdir();\n            if (!mkdirSucceeded) {\n                throw new IOException(\"Failed creating directory: '\" + tmpDir.getAbsolutePath() + \"'\");\n            }\n        }\n    }\n    //create the path\n    File file = new File(tmpDir, fileName);\n    if (file.exists()) {\n        boolean deleteFileSucceeded = file.delete();\n        if (!deleteFileSucceeded) {\n            throw new IOException(\"Unable to delete pre existing sample file: '\" + fileName + \"'\");\n        }\n    }\n    boolean createFileSucceeded = file.createNewFile();\n    if (!createFileSucceeded) {\n        throw new IOException(\"Unable to create sample file: '\" + fileName + \"'\");\n    }\n\n    fw = new FileWriter(file);\n    bw = new BufferedWriter(fw);\n\n    StringBuilder sb = new StringBuilder(\"something...\");\n    bw.write(sb.toString());\n    bw.flush();\n} catch (IOException ioe) {\n    log.warn(\"Unable to file invalid sample to file: '\" + fileName + \"'\", ioe);\n} finally {\n    try {\n    if (bw != null) {\n        try {\n            bw.close();\n        } catch (IOException e) {\n            log.warn(\"Unable to close Writer to file: '\" + fileName + \"'\", e);\n        }\n    }\n    else if (fw != null) {\n        try {\n            fw.close();\n        } catch (IOException e) {\n            log.warn(\"Unable to close Writer to file: '\" + fileName + \"'\", e);\n    }\n}\n</code></pre>\n","answer_id":9966048,"question_id":9965875},{"owner":{"profile_image":"https://www.gravatar.com/avatar/de94ab4df68395bd59de5d6c9c95df39?s=256&d=identicon&r=PG","account_id":115344,"user_type":"registered","user_id":302916,"link":"https://stackoverflow.com/users/302916/brian-roach","reputation":76329,"display_name":"Brian Roach"},"content_license":"CC BY-SA 3.0","score":2,"is_accepted":false,"last_activity_date":1333297022,"creation_date":1333297022,"body":"<p>Your approach dealing with <code>tmpDir</code> is flawed. The file is getting created <em>somewhere</em>.</p>\n\n<p>From the Javadocs for <code>File(String, String)</code>:</p>\n\n<blockquote>\n  <p>If parent is null then the new File instance is created as if by invoking the single-argument File constructor on the given child pathname string.</p>\n</blockquote>\n","answer_id":9965984,"question_id":9965875},{"owner":{"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=256&d=identicon&r=PG","account_id":47283,"user_type":"registered","user_id":139985,"link":"https://stackoverflow.com/users/139985/stephen-c","reputation":703927,"display_name":"Stephen C","accept_rate":69},"content_license":"CC BY-SA 3.0","score":7,"is_accepted":true,"last_activity_date":1333296908,"creation_date":1333296587,"body":"<p>If <code>file.createNewFile()</code> returns <code>true</code> then a file was created.</p>\n\n<p>The most likely explanation that the file is being created, but not in the place where you are expecting.  I expect that you are using a relative pathname for the file ...</p>\n\n<hr>\n\n<p>Looking more carefully at your code and your comment, I think that is exactly what is happening.  Take a look at the way that you create the temporary directory.  You first construct the file using <code>tmpdir</code> as the parent directory.  Then you test to see is <code>tmpdir</code> is <code>null</code> and create a directory.  But you then proceed to use the <code>File</code> object which STILL has a <code>null</code> parent directory!!</p>\n\n<p>You need to create the <code>File</code> object AFTER checking <code>tmpdir</code> and creating it if required.</p>\n","answer_id":9965937,"question_id":9965875,"last_edit_date":1333296908},{"owner":{"profile_image":"https://www.gravatar.com/avatar/d8f384631635a15b3c6e7aa60f8ec17f?s=256&d=identicon&r=PG","account_id":31915,"user_type":"registered","user_id":88001,"link":"https://stackoverflow.com/users/88001/vahidg","reputation":3953,"display_name":"vahidg","accept_rate":90},"content_license":"CC BY-SA 3.0","score":11,"is_accepted":false,"last_activity_date":1304515882,"creation_date":1304515882,"body":"<p>By passing an empty string to the constructor, you are creating an empty 'abstract pathname'. From the <a href=\"http://download.oracle.com/javase/6/docs/api/java/io/File.html#File%28java.lang.String%29\" rel=\"noreferrer\">java.io.File Javadoc</a>:</p>\n\n<blockquote>\n  <p>If the given string is the empty\n  string, then the result is the empty\n  abstract pathname.</p>\n</blockquote>\n\n<p>The 'empty abstract pathname' in this case does not physically exist, hence <code>exists()</code> evaluates to <code>false</code>. The reason you get a directory for the empty string is described in the <a href=\"http://download.oracle.com/javase/6/docs/api/java/io/File.html#getAbsolutePath%28%29\" rel=\"noreferrer\">Javadoc</a> of <code>getAbsolutePath</code>:</p>\n\n<blockquote>\n  <p>If this abstract pathname is the empty\n  abstract pathname then the pathname\n  string of the current user directory,\n  which is named by the system property\n  user.dir, is returned.</p>\n</blockquote>\n","answer_id":5884205,"question_id":5883808},{"owner":{"profile_image":"https://www.gravatar.com/avatar/afa5f1047c1344242b2b876bc86e872c?s=256&d=identicon&r=PG","account_id":229445,"user_type":"registered","user_id":492410,"link":"https://stackoverflow.com/users/492410/ddewaele","reputation":22393,"display_name":"ddewaele","accept_rate":57},"content_license":"CC BY-SA 3.0","score":5,"is_accepted":false,"last_activity_date":1304515107,"creation_date":1304515107,"body":"<p>According to the javaDocs : </p>\n\n<p>Every pathname <strong>that denotes an existing file or directory</strong> has a unique canonical form.</p>\n\n<p>In your first example, you are referring to \"the file that has no name\". </p>\n\n<p>As that one does not exist, I don't think it's a bug that new File(\"\") and new File(\".\") yield the same canonical path.</p>\n","answer_id":5884050,"question_id":5883808},{"owner":{"profile_image":"https://www.gravatar.com/avatar/ad5a7252f318a4e27373ce8e4fadcb72?s=256&d=identicon&r=PG","account_id":6967,"user_type":"registered","user_id":11889,"link":"https://stackoverflow.com/users/11889/arkban","reputation":3429,"display_name":"ARKBAN","accept_rate":100},"content_license":"CC BY-SA 2.5","score":4,"is_accepted":false,"last_activity_date":1280341479,"creation_date":1280341479,"body":"<p>I'd suggest checking the <a href=\"http://commons.apache.org/io/\" rel=\"nofollow noreferrer\">Apache Commons IO</a> library. They have some pretty helpful methods for deleting files in the FileUtils class.</p>\n","answer_id":3356129,"question_id":3355746},{"owner":{"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=256&d=identicon&r=PG","account_id":7445,"user_type":"registered","user_id":12943,"link":"https://stackoverflow.com/users/12943/bill-k","reputation":62274,"display_name":"Bill K","accept_rate":84},"content_license":"CC BY-SA 2.5","score":3,"is_accepted":false,"last_activity_date":1280340344,"creation_date":1280340344,"body":"<p>You may find it an order of magnitude faster if you shell out and have the system delete them.  You'd have to be able to hit a stopping point (where no files were being processed) then shell out and delete \"*\" or <em>.</em> or whatever it is for your OS.</p>\n\n<p>(Note, this makes your program VERY os dependent!)</p>\n\n<p>Be sure on Windows and Mac that you are bypassing the trashcan feature!</p>\n\n<p>The nice thing about del <em>.</em> or rm * is that they SHOULD batch the operation rather than repeatedly opening, modifying and closing the directory.</p>\n\n<p>You might also write filenames with a pattern like a001, a002, a003, ... and when you reach a999 you go to b001 and delete a*.</p>\n","answer_id":3355956,"question_id":3355746},{"owner":{"profile_image":"https://i.stack.imgur.com/07ej2.jpg?s=256&g=1","account_id":70258,"user_type":"registered","user_id":203907,"link":"https://stackoverflow.com/users/203907/bozho","reputation":590444,"display_name":"Bozho","accept_rate":81},"content_license":"CC BY-SA 2.5","score":13,"is_accepted":true,"last_activity_date":1280339520,"creation_date":1280339520,"body":"<p>Well, <code>file.delete()</code> should suffice (it is internally implemented as a native method)</p>\n","answer_id":3355827,"question_id":3355746}]