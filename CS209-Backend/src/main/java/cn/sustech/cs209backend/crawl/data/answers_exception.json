[{"owner":{"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=256&d=identicon&r=PG","account_id":47283,"user_type":"registered","user_id":139985,"link":"https://stackoverflow.com/users/139985/stephen-c","reputation":703927,"display_name":"Stephen C","accept_rate":69},"content_license":"CC BY-SA 4.0","score":5,"is_accepted":true,"last_activity_date":1655113252,"creation_date":1655112348,"body":"<p>There is an Oracle style guide for javadocs:</p>\n<ul>\n<li><a href=\"https://www.oracle.com/au/technical-resources/articles/java/javadoc-tool.html\" rel=\"nofollow noreferrer\">How to Write Doc Comments for the Javadoc Tool</a>.</li>\n</ul>\n<p>Whether that counts as &quot;official&quot; depends on your point of view.  Either way, I cannot see any mention in that document of multiple tags for the same exception.</p>\n<p>However, according to the following Q&amp;A, multiple <code>@throws</code> tags for the same exception is <em>supported</em> by the standard Javadoc tool chain; i.e. each of them will result in an entry in the generated HTML.</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/9229991/\">Can I use multiple @throws tags for the same exception in Javadoc?</a></li>\n</ul>\n<p><sub>(My personal opinion is the javadocs will be more readable if you don't do this, but that is <em>just my opinion</em>.)</sub></p>\n","answer_id":72600530,"question_id":72598626,"last_edit_date":1655113252},{"owner":{"profile_image":"https://www.gravatar.com/avatar/c8367f123240268431ceae261af0dac9?s=256&d=identicon&r=PG","account_id":123802,"user_type":"registered","user_id":318493,"link":"https://stackoverflow.com/users/318493/rotora","reputation":37785,"display_name":"RoToRa","accept_rate":67},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":false,"last_activity_date":1655111614,"creation_date":1655111614,"body":"<p>I'm not sure if this answers your question, but <a href=\"http://www.javapractices.com/topic/TopicAction.do?Id=171\" rel=\"nofollow noreferrer\">this article</a> (which happens to have an example with multiple <code>@throws</code> with the same exception, although it's not the topic of the article) suggests you shouldn't be documenting those exceptions at all, because they are unchecked and the documention would only repeat conditions of the <code>@param</code> tags.</p>\n","answer_id":72600379,"question_id":72598626},{"owner":{"profile_image":"https://www.gravatar.com/avatar/d448323612608b991d0941b1376b98a0?s=256&d=identicon&r=PG","account_id":23968828,"user_type":"registered","user_id":17957852,"link":"https://stackoverflow.com/users/17957852/debanjan","reputation":104,"display_name":"Debanjan"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":false,"last_activity_date":1655061875,"creation_date":1655061875,"body":"<p>You can make <code>UndefinedSubroutineException</code> a RuntimeException. In that case since it is an unchecked exception, and you will not have to change your method signature.</p>\n<p>Inside your test case you can now add a try catch block to handle the scenario.</p>\n","answer_id":72595248,"question_id":72595022},{"owner":{"profile_image":"https://www.gravatar.com/avatar/7c7ce5a047c15f100e5f8e224078d19a?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":16720659,"user_type":"registered","user_id":12085680,"link":"https://stackoverflow.com/users/12085680/bugsoverflow","reputation":408,"display_name":"BugsOverflow"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":true,"last_activity_date":1654950608,"creation_date":1654950285,"body":"<p>After analyzing very carefully everything, <code>@ResponseStatus</code> is not the problem, it is doing what it is ment to be, but I am going to explain what is going on and leave this here in case somebody else comes through this because it can be tricky if you use it for the first time:</p>\n<pre><code>@RestControllerAdvice\npublic class SftpExceptionHandler {\n\n    @ExceptionHandler(IncorrectConsecutiveException.class)\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    public GeneralResponse handlerRequestException(IncorrectConsecutiveException ex) {\n        return new GeneralResponse(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());\n    }\n\n\n}\n</code></pre>\n<p>So as you can see I set the <code>@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)</code> as internal server error which means error 500, but okay below in my code I am also setting an status and a message here <code>new GeneralResponse(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());</code></p>\n<p>So making the request through Postman, while <strong>USING</strong> <code>@ResponseStatus</code> it appears like this:</p>\n<p><a href=\"https://i.stack.imgur.com/H4Ggq.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/H4Ggq.png\" alt=\"enter image description here\" /></a></p>\n<p>notice the response status in the upper right is <code>500 Internal Server Error</code>, and also in my custom response it is <code>&quot;code&quot;:500</code>.</p>\n<p>Now notice how the response from the same request will look <strong>WITHOUT</strong> <code>@ResponseStatus</code> at the same code you saw above:</p>\n<p><a href=\"https://i.stack.imgur.com/CDoHZ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/CDoHZ.png\" alt=\"enter image description here\" /></a></p>\n<p>By this point you can already see whats the difference, without the @ResponseStatus we get a 200 as a status, but my custom response (GeneralResponse) object is still giving the same response as before with <code>&quot;code&quot;:500</code>, so what is the conclusion?</p>\n<p><strong>Conclusion</strong>:</p>\n<p>The frontend is expecting always a 200 as the response status, so after that it can evaluate the internal code of the GeneralResponse object, so the problem is not <code>@ResponseStatus</code>, it is actually the frontend needs to update, so it can also read what is inside response objects with 500 as status or so, hope this helps!</p>\n","answer_id":72584310,"question_id":72582682,"last_edit_date":1654950608},{"owner":{"profile_image":"https://lh3.googleusercontent.com/a-/AOh14Gh-zfCjpX_AGfi1RoKyINxNOdk1Xps_-31Y9Y2qFg=k-s256","account_id":20216408,"user_type":"registered","user_id":14827069,"link":"https://stackoverflow.com/users/14827069/rohit-athithya","reputation":31,"display_name":"Rohit Athithya"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1654755149,"creation_date":1654755149,"body":"<p><strong>I think we can try adding a local try-catch block:</strong>\nExample Scenario:\nLets say we have program in which a code block that could do some math operation; and based on our logic we expect a exception, which may be considered non-fatal.</p>\n<p>so we may just want to ignore this exception and go to other functionality of the main program - exactly to the question:</p>\n<p><strong>I thought to do this:</strong></p>\n<ul>\n<li>put that block of code in a function and declare the function to throw an exception</li>\n<li>in the main program, where we call the function , we can do so by using a local try-catch block</li>\n<li>so incase we have an exception this try-catch solves it and then continues with the remaining code**</li>\n</ul>\n<p>may be an example would do good:</p>\n<pre><code>public class Main\n{\n    public static double divideByInputs(int a, int b) throws ArithmeticException{\n        return (a/b);\n    }\n    public static void main(String[] args) {\n        \n        System.out.println(&quot;Hello World&quot;);\n        //local try-catch block\n            try {\n                divideByInputs(3,0); // throws Exception\n            }\n            catch (ArithmeticException e) {\n                // Exception handler\n                System.out.println(&quot;Divided by zero operation cannot possible&quot;);\n            }\n        //remaining part of code\n        System.out.println(&quot;Though there was an expetion we conintue to print chocolates&quot;);\n        for (int i = 0; i &lt; 5; ++i) \n        {\n            System.out.println(i);\n        }\n    }\n}\n</code></pre>\n<p><strong>P.S.:</strong> I read many other answers on similar questions, where I understood that having a exception in program is kinda 'bad' - 'cause why have, even, predictable errors!\nI wrote this answer as a suggestion...\nI am still a newbie to the world of programming, Thanks for reading!</p>\n","answer_id":72555463,"question_id":46091211},{"owner":{"profile_image":"https://i.stack.imgur.com/vxLk9.jpg?s=256&g=1","account_id":13651727,"user_type":"registered","user_id":9849418,"link":"https://stackoverflow.com/users/9849418/louis-marie","reputation":9,"display_name":"Louis Marie"},"content_license":"CC BY-SA 4.0","score":-1,"is_accepted":false,"last_activity_date":1654729229,"creation_date":1654729229,"body":"<p>The best way is to use try-catch. With this, you can catch any kind of error and react (execute a block of code) appropriately.</p>\n","answer_id":72553074,"question_id":72552971},{"owner":{"profile_image":"https://www.gravatar.com/avatar/28d7fc76db803c6757e7cfd2cde20354?s=256&d=identicon&r=PG","account_id":31293,"user_type":"registered","user_id":85821,"link":"https://stackoverflow.com/users/85821/bart-van-heukelom","reputation":43494,"display_name":"Bart van Heukelom","accept_rate":73},"content_license":"CC BY-SA 4.0","score":-1,"is_accepted":false,"last_activity_date":1654696757,"creation_date":1654696757,"body":"<p>Assuming that our entire project is full of perfect code that has 0 bugs, i.e. may only encounter exceptions from system resources and user input, and always leaves state valid when such exceptions occur, one of the differences is that in code like:</p>\n<pre><code>bunnyLock.lock();\ntry {\n    doBunnyThings();\n} finally {\n    bunnyLock.unlock(); // assume that this requires memory, e.g. because it's a custom logging implementation of Lock\n}\n</code></pre>\n<p>...it is assumed that the code that the <code>finally</code> block only contains &quot;safe&quot; code that never throws. And if it's invoked because of an <code>ArrayIndexOutOfBoundsException</code> inside <code>doBunnyThings</code>, that is a pretty safe assumption. However, if OOM is thrown by <code>doBunnyThings</code>, chances are higher that the <code>finally</code> block <em>also</em> fails, because memory is still low. Then the assumption is violated and all bets are off, so the resulting OOM should not be caught.</p>\n<p>That said, I'm not quite convinced. For example, the logging behind <code>bunnyLock.unlock()</code> may also fail because of insufficient disk space, an <code>IOException</code>, yet that is not considered the end of the world. And following the perfect code guidelines, <code>bunnyLock.unlock()</code> should leave the lock unlocked, even if its logging failed due to an OOM.</p>\n","answer_id":72547039,"question_id":72546743},{"owner":{"profile_image":"https://www.gravatar.com/avatar/b13bedc5215730fbce5edff6c130988a?s=256&d=identicon&r=PG","account_id":401843,"user_type":"registered","user_id":768644,"link":"https://stackoverflow.com/users/768644/rzwitserloot","reputation":89873,"display_name":"rzwitserloot"},"content_license":"CC BY-SA 4.0","score":3,"is_accepted":true,"last_activity_date":1654696729,"creation_date":1654696729,"body":"<blockquote>\n<p>But... that's not exclusive to OutOfMemoryError. Any exception may have left invalid state if it's not properly handled.</p>\n</blockquote>\n<p>Different definitions.</p>\n<p>Normal exceptions (i.e. everything except InternalError and OOME) have well defined behaviour: Either the code (by executing the statement <code>throw someException;</code>), or the JVM itself (for example by executing <code>foo.instanceMethod</code> where <code>foo</code> resolves to <code>null</code>, causing the JVM to throw an NPE), throws an exception. That means at the point the exception is thrown, execution of that context stops and execution jumps to the relevant catch block, or if there is none, that method is aborted and the caller now gets this exception thrown, and so on.</p>\n<p>This does not cause invalid state unless you suck at programming. Unfortunately, a <em>ton</em> of SO answers and tutorials suck at programming, they do this:</p>\n<pre><code>try {\n  some code here;\n} catch (IOException e) {\n  e.printStackTrace();\n}\n</code></pre>\n<p>... which leaves code in an invalid state: The problem is, execution <strong>continues</strong> after that catch block, which is bad. The right way to write code that doesn't want to care about some exception is instead:</p>\n<pre><code>try {\n  some code here;\n} catch (IOException e) {\n  throw new RuntimeException(&quot;unhandled&quot;, e);\n}\n</code></pre>\n<p>That is merely ugly, vs the <code>e.printStackTrace()</code> version, which is downright broken. Update your IDE's templates!</p>\n<p>At any rate, <strong>that</strong> is what you mean here with 'undefined behaviour' - crappy code. You can say that about any code: Well, that code COULD have bugs, so, what does it do? No body knows! - yeah, okay, but take that argument to its logical conclusion and your only remaining option is to toss your computer out the window and go live with the amish.</p>\n<p>Fortunately, the <code>java.*</code> classes and all well-written libraries (most commonly used libraries are well written in this sense) <strong>do not</strong> do the above - if they throw stuff, the behaviour is not 'undefined'. Generally, all operations are atomic: Either it works, or, it did absolutely nothing and instead threw an exception (vs the above crappy code which acts like it works, in the sense that the method returns normally, but there's a stack trace on your console and the method did not do what its javadoc says it should be doing).</p>\n<p>What the community means specifically when they say that OOME causes undefined behaviour is that OOME is a special snowflake, in this regard:</p>\n<p>OOME can occur 'within' otherwise protected execution contexts: Unlike almost any other exception, it can be thrown inside the innards of the JVM that aren't expecting to deal with exceptions, and thus, it leaves e.g. a file handle half-open and in an undefined fragile state (where interacting with that handle causes bizarre exceptions or worse, undefined behaviours), and so on.</p>\n<p>That's the difference. If, say, writing to an <code>OutputStream</code> you got from <code>Files.newOutputStream</code> causes some IOException, then behaviour is still well defined. Nothing changed in this record. Normally, given:</p>\n<pre><code>try (var out = Files.newOutputStream(.. path ..)) {\n  out.write(5);\n  out.write(11);\n}\n</code></pre>\n<p>At the <code>.write(5)</code> command, either [A] that returns normally at which point you know that the '5' is at the very least in the OS's core file caches (no longer in your JVM's file caches), or [B] it throws an IOException that will accurately represent the issue at hand.</p>\n<p>Let's say that <code>.write(5)</code> threw some exception, you caught it, and then you want to just continue to the <code>.write(11)</code> line. Nothing changed: You <em>STILL</em> have the same setup: Either that does work (let's say the exception was: You have no write access, and in the catch of that you prompt the user to fix it and sleep the thread for a while, and the user actually <code>sudo chmod</code> fixes it, then depending on how the OS and java works that might mean future <code>.write</code> calls will now work just fine!) - or most likely it won't, but you still get exceptions 'as expected': IOExceptions that properly describe the problem.</p>\n<p>In contrast to OOME: If <code>.write(5)</code> throw an OOM, then <code>.write(11)</code> may cause your computer to blast Beethoven's Ode to Joy from the speakers as far as you know - the system is in an unstable state and the OutputStream you have may now behave in ways that the javadoc do not cover.</p>\n<p>Note that this isn't universal. Not all OOMEs lead to an 'unstable' system. For example, this code is perfectly fine:</p>\n<pre><code>byte[] bigArray;\ntry {\n  bigArray = new byte[100000000];\n} catch (OutOfMemoryError e) {\n  // handle the fact that you can't make em that big\n}\n</code></pre>\n<p>Essentially, if any method invoke throws OOME you need to accept that various things can now be in a state that the javadoc do not describe and whose behaviour is dependent on all sorts of weird factors (OS, JVM vendor, java version, phase of the moon...), but a few primitives, mostly the <code>new arr[size]</code> operation, you know what happened and can reliably respond to the OOME.</p>\n","answer_id":72547035,"question_id":72546743},{"owner":{"profile_image":"https://www.gravatar.com/avatar/c47d1f7544a8c4a1bb7a41d511f53604?s=256&d=identicon&r=PG","account_id":1580843,"user_type":"registered","user_id":1466267,"link":"https://stackoverflow.com/users/1466267/spacetrucker","reputation":13479,"display_name":"SpaceTrucker","accept_rate":91},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":false,"last_activity_date":1654696636,"creation_date":1654696636,"body":"<p>The problem with OOME is not that allocations for large memory chunks may fail, but that such allocations allocate everything thats available. And then any other allocation in any other thread will fail.</p>\n<p>And needing to consider that any allocation may fail while coding makes it impractical from an economic perspective. You give up a lot of high level features that java and/or your techstack and business abstractions provide and need to deal with the underlying memory resources at a lot more locations than you have to deal with file io for example.</p>\n<p>So I agree that there can be programs that are perfectly capable of handling OOME. It's just that they are not practical from an economic perspective.</p>\n<p>Another reason is that keeping a jvm on such a high memory usage level will kick off garbage collection very often so that the cpu is basically only busy doing gc work. Also rendering it useless from an economical perspective.</p>\n","answer_id":72547009,"question_id":72546743},{"owner":{"profile_image":"https://www.gravatar.com/avatar/bb6e5cea4f547ec8c2b954d6c290007b?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":16743892,"user_type":"registered","user_id":12980819,"link":"https://stackoverflow.com/users/12980819/falchio","reputation":295,"display_name":"Falchio"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1654621751,"creation_date":1654621751,"body":"<p>Another variant</p>\n<pre><code>public class MyCustomExceptionWithoutMessageInConstructor extends IllegalArgumentException {\n    private static final String ERROR_MESSAGE = &quot;terrible error&quot;;\n\n    public MyCustomExceptionWithoutMessageInConstructor() {\n        super(ERROR_MESSAGE);\n    }\n}\n</code></pre>\n","answer_id":72535130,"question_id":8895091},{"owner":{"profile_image":"https://www.gravatar.com/avatar/32f9e1340db7b5386f33a66f0a82f353?s=256&d=identicon&r=PG","account_id":25488526,"user_type":"unregistered","user_id":19283732,"link":"https://stackoverflow.com/users/19283732/hussain-raza","reputation":1,"display_name":"Hussain Raza"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1654610205,"creation_date":1654531144,"body":"<p>You can use the code in this way...</p>\n<pre><code>package multipleinputs;\nimport java.util.*;\n\npublic class multipleinputs {\n    public static void main(String[] args) {\n        int max = 0;\n        for (int i = 0; i &lt; 10; i++) {\n            while (true) {\n            try {           \n                Scanner input = new Scanner(System.in);\n                 {\n                    System.out.println(&quot;Enter integer value #&quot; + (i + 1));\n                    int num = input.nextInt();\n                    if (num &gt; max){ \n                        max = num;\n                    }\n                }\n                break;  \n            }     \n            catch (InputMismatchException e) {\n                System.out.println(&quot;Only integer values are allowed. Try Again...&quot;);    \n            } \n         }\n       } \n        System.out.println(&quot;Maximum input value is &quot; + max);\n    } \n }\n</code></pre>\n","answer_id":72520373,"question_id":70008079,"last_edit_date":1654610205},{"owner":{"profile_image":"https://www.gravatar.com/avatar/3b6c83821259f4fad10da4b560a7d40c?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":16530625,"user_type":"registered","user_id":11943976,"link":"https://stackoverflow.com/users/11943976/kasmi-g","reputation":116,"display_name":"KASMI G."},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1637167316,"creation_date":1637167316,"body":"<p>You can declare an array of double, read the values in a loop, in the loop you try/catch the exception. In case there is no error you increment the index.\nIt could be something like this :</p>\n<pre><code>double[] a = [0,0,0];\nint i = 0;\ndo {\n   try {\n       System.out.println(&quot;Input the first number: &quot;);\n       a[i] = input.nextDouble();\n       i++;\n   } catch (InputMismatchException ie) {\n        System.out.println(&quot;Only numbers allowed to be entered. No letters or words!&quot;);\n        input.nextLine();\n    }\n} while(i&lt;3);\n</code></pre>\n<p>I don't have a compiler to test this, if there is an error let me know i'll try to help you.</p>\n","answer_id":70008344,"question_id":70008079},{"owner":{"profile_image":"https://www.gravatar.com/avatar/aca8027396aa8e114f0a23a15f2d5b2e?s=256&d=identicon&r=PG","account_id":3068754,"user_type":"registered","user_id":2599899,"link":"https://stackoverflow.com/users/2599899/arthur-klezovich","reputation":2677,"display_name":"Arthur Klezovich"},"content_license":"CC BY-SA 4.0","score":-1,"is_accepted":false,"last_activity_date":1637166796,"creation_date":1637166553,"body":"<blockquote>\n<p>Is there a simpler way to fix this or do I need to create separate try/catch blocks for each input?</p>\n</blockquote>\n<p>Yes. Instead of reading out using <code>nextDouble()</code>, just do ...</p>\n<pre><code>var input1Correct = false \nwhile(!input1Correct) {\n  System.out.println(&quot;Input the first number: &quot;);\n  a = input.nextLine();\n  input1Correct = validateInput(1)  \n}\n\n</code></pre>\n<p>Then you do manual parsing and validation and if everything is OK, proceed to the next step. Otherwise, ask to reenter.</p>\n<p>You won't even need the <code>catch</code> clause in this case.</p>\n<p>Does this solve your problem ? Let me know in the comments.</p>\n","answer_id":70008144,"question_id":70008079,"last_edit_date":1637166796},{"owner":{"profile_image":"https://www.gravatar.com/avatar/b13bedc5215730fbce5edff6c130988a?s=256&d=identicon&r=PG","account_id":401843,"user_type":"registered","user_id":768644,"link":"https://stackoverflow.com/users/768644/rzwitserloot","reputation":89873,"display_name":"rzwitserloot"},"content_license":"CC BY-SA 4.0","score":2,"is_accepted":false,"last_activity_date":1637166726,"creation_date":1637166569,"body":"<p>Make methods. You have a task: 'ask for a double, and if the user doesn't enter one, tell them, and keep asking until they do'. You want to run this task repeatedly and with different prompts.</p>\n<p>Parameterize the differences and make a method. Then invoke that:</p>\n<pre><code>public static double askDouble(Scanner input, String prompt) {\n  while (true) {\n    try {\n      System.out.println(prompt);\n      return input.nextDouble();\n    } catch (InputMismatchException e) {\n      System.out.println(&quot;Only numbers allowed, etc...&quot;);\n      input.next(); //don't mix nextLine and nextAnything else.\n    }\n  }\n}\n</code></pre>\n<p>and then call that method in your main (no need for a do/while loop there, at all, or that <code>correctInput</code> boolean. In fact, your mine now becomes 3 very very simple lines. Yay methods!)</p>\n","answer_id":70008150,"question_id":70008079,"last_edit_date":1637166726},{"owner":{"profile_image":"https://www.gravatar.com/avatar/a024ea95c3bbdcbdaef5becfc78b2aa0?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":18243171,"user_type":"registered","user_id":13279831,"link":"https://stackoverflow.com/users/13279831/nowhere-man","reputation":19300,"display_name":"Nowhere Man"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1636844095,"creation_date":1636844095,"body":"<p>The root cause of the issue is described in the comments: index <code>m</code> exceeds the number of seasonal records and definitely it may take another nested loop to print the seasonal records.</p>\n<p>It may be better to replace <code>for</code> loops with indexes with <code>for-each</code> to make the code shorter, more readable and less prone to the mentioned errors:</p>\n<pre class=\"lang-java prettyprint-override\"><code>for (var player : t1.getPlayerList()) {\n    pw.println(player.getName() + &quot;; &quot; + player.getHeight() + &quot;; &quot;);\n\n    for (var seasonRecord : player.getSeasonalRecords()) {\n        pw.println(seasonalRecord.getScores());\n    }\n} \n</code></pre>\n","answer_id":69958915,"question_id":69923637},{"owner":{"profile_image":"https://lh4.googleusercontent.com/-XO5pmVBQa3Y/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnEnwT2r9D_vvE0tEkG_cwkXTZaXg/photo.jpg?sz=256","account_id":18554741,"user_type":"registered","user_id":13520144,"link":"https://stackoverflow.com/users/13520144/brunner-arthur","reputation":1,"display_name":"Brunner Arthur"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1636741913,"creation_date":1636733350,"body":"<p>I finally solved it.</p>\n<ol>\n<li><p>I switched IDEs. I was using intellij all this while and all this nonsense was going on. I checked their documentation but to no use. I switched to Netbeans and  the problem was resolved within less than 5 minutes. So if you are using one IDE, try another.</p>\n</li>\n<li><p>I used the same version of jasper reports in netbeans as was used in the jasper studio. So if the version of the jasperreports is 6.17 in the studio, please download and use the same version in your program.</p>\n</li>\n</ol>\n","answer_id":69945846,"question_id":69935845,"last_edit_date":1636741913},{"owner":{"profile_image":"https://www.gravatar.com/avatar/f6e922a2cb7e2da59286f27b162aaca5?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":5998820,"user_type":"registered","user_id":4712734,"link":"https://stackoverflow.com/users/4712734/duncg","reputation":12676,"display_name":"DuncG"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":true,"last_activity_date":1636730939,"creation_date":1636730939,"body":"<p>You have declared that the method throws an exception - which it doesn't:</p>\n<pre><code>public String fileNotFoundExTest() throws FileNotFoundException {\n</code></pre>\n<p>Just change to:</p>\n<pre><code>public String fileNotFoundExTest() {\n</code></pre>\n","answer_id":69945286,"question_id":69945215},{"owner":{"profile_image":"https://www.gravatar.com/avatar/aca8027396aa8e114f0a23a15f2d5b2e?s=256&d=identicon&r=PG","account_id":3068754,"user_type":"registered","user_id":2599899,"link":"https://stackoverflow.com/users/2599899/arthur-klezovich","reputation":2677,"display_name":"Arthur Klezovich"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":true,"last_activity_date":1636711601,"creation_date":1636711601,"body":"<p>I've taken a look at the stack trace and well ... it says that a transaction is already active and you are trying to open a new one.</p>\n<p>Where is this transaction, which is already active opened then ?</p>\n<pre><code>  at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:74)\n                at project.dao.DAOGeneric.getById(DAOGeneric.java:268)\n                at project.controller.forwards.ViewPic.processRequest(ViewPic.java:86)\n                at project.controller.MainServlet.doGet(MainServlet.java:38)\n</code></pre>\n<p>It must be opened somewhere here ( everything below is system classes and outside your control ) either explicitly (by method calls) or implicitly (@Transactional annotation or similar)</p>\n<p>You can either find this peace of code, which opens the transaction before you method call and remove it. Or you can change your code so that it can join an existing transaction by doing something like <a href=\"https://stackoverflow.com/q/42896625/2599899\">this</a>.</p>\n","answer_id":69941125,"question_id":69940918},{"owner":{"profile_image":"https://i.stack.imgur.com/J56Tk.jpg?s=256&g=1","account_id":545654,"user_type":"registered","user_id":1360984,"link":"https://stackoverflow.com/users/1360984/harmlezz","reputation":7998,"display_name":"Harmlezz","accept_rate":60},"content_license":"CC BY-SA 4.0","score":3,"is_accepted":false,"last_activity_date":1636636754,"creation_date":1399967795,"body":"<p>I don't think there is a <em>best practice</em>, because it depends on what you try to achieve. In my opinion, exceptions and their messages should not be used to be displayed directly to the user. Exceptions are way too technical and do depend heavily on the context where they get thrown.</p>\n<p>Hence, my approach would be to design a container type which collects all the exceptions thrown by your validations. Those exceptions should preserve as much of the context as possible (not in form of an exception message, but in form of fields passed into the constructor). Provide getter methods to make those fields (properties) accessible. When rendering the view, you may iterate over all entries of your container and generate a proper, human readable, <em>i18n</em> message.</p>\n<p>Here is some pseudo-code as requested by the comment of @AlexandreSantos. It is not polished nor proven, just my first draft. So do not expect excellent design. It's just an example how it could be implemented / designed:</p>\n<pre><code>public static void main(String[] args) {\n    Violations violations = new Violations();\n    Integer age = AgeValidator.parse(&quot;0042&quot;, &quot;age&quot;, violations);\n    URL url = UrlValidator.parse(&quot;http://some.website.com&quot;, &quot;url&quot;, violations);\n}\n\n// Validator defining all the rules for a valid age value\npublic class AgeValidator {\n\n    // Collection of validation rules for age values\n    private static final Collection&lt;Validator&lt;String&gt;&gt; VALIDATORS = ...;\n\n    // Pass in the value to validate, the name of the field\n    // defining the value and the container to collect all\n    // violations (could be a Map&lt;String, ValidationException&gt;)\n    //\n    // a return value of null indicates at least one rule violation\n    public static Integer parse(String value, String name, Violations violations) {\n        try {\n            for (Validator&lt;String&gt; validator : VALIDATORS) validator.validate(value);\n        } catch (ValidationException e) {\n            violations.add(name, e);\n        }\n        return violations.existFor(name) ? null : Integer.parseInt(value);\n    }\n}\n</code></pre>\n","answer_id":23625681,"question_id":23625440,"last_edit_date":1636636754},{"owner":{"profile_image":"https://i.stack.imgur.com/7558H.jpg?s=256&g=1","account_id":19167456,"user_type":"registered","user_id":14001886,"link":"https://stackoverflow.com/users/14001886/sushant-kumar-rout","reputation":101,"display_name":"Sushant Kumar Rout"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1636527910,"creation_date":1636527910,"body":"<pre><code>import java.util.Scanner;\nclass NotProperNameException extends Exception {\n   NotProperNameException(String msg){\n      super(msg);\n   }\n}\npublic class CustomCheckedException{\n   private String name;\n   private int age;\n   public static boolean containsAlphabet(String name) {\n      for (int i = 0; i &lt; name.length(); i++) {\n         char ch = name.charAt(i);\n         if (!(ch &gt;= 'a' &amp;&amp; ch &lt;= 'z')) {\n            return false;\n         }\n      }\n      return true;\n   }\n   public CustomCheckedException(String name, int age){\n      if(!containsAlphabet(name)&amp;&amp;name!=null) {\n         String msg = &quot;Improper name (Should contain only characters between a to z (all small))&quot;;\n         NotProperNameException exName = new NotProperNameException(msg);\n         throw exName;\n      }\n      this.name = name;\n      this.age = age;\n   }\n   public void display(){\n      System.out.println(&quot;Name of the Student: &quot;+this.name );\n      System.out.println(&quot;Age of the Student: &quot;+this.age );\n   }\n   public static void main(String args[]) {\n      Scanner sc= new Scanner(System.in);\n      System.out.println(&quot;Enter the name of the person: &quot;);\n      String name = sc.next();\n      System.out.println(&quot;Enter the age of the person: &quot;);\n      int age = sc.nextInt();\n      CustomCheckedException obj = new CustomCheckedException(name, age);\n      obj.display();\n   }\n}\n</code></pre>\n","answer_id":69909042,"question_id":1070590},{"owner":{"profile_image":"https://lh6.googleusercontent.com/-p8Rp7JLqCcI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re0KGy44XtS1f480gmWqfi3-LRorA/photo.jpg?sz=256","account_id":16879177,"user_type":"registered","user_id":12205760,"link":"https://stackoverflow.com/users/12205760/purrkachuu","reputation":1,"display_name":"purrkachuu"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1636471521,"creation_date":1636471521,"body":"<p>Based on the earlier comment by someone else:</p>\n<blockquote>\n<p>You close the second Scanner which closes the underlying InputStream,\ntherefore the first Scanner can no longer read from the same\nInputStream and a NoSuchElementException results.</p>\n<p>The solution: For console apps, use a single Scanner to read from\nSystem.in.</p>\n<p>Aside: As stated already, be aware that Scanner#nextInt does not\nconsume newline characters. Ensure that these are consumed before\nattempting to call nextLine again by using Scanner#newLine().</p>\n<p>See: Do not create multiple buffered wrappers on a single InputStream</p>\n</blockquote>\n<p>I have came up with this solution. Perhaps this will help someone:</p>\n<p>the following code WORKS:</p>\n<pre><code>import java.util.Scanner;\n\npublic class Main {\n\n    private static String func(Scanner in) {\n        String input = &quot;&quot;;\n        in = new Scanner(System.in).useDelimiter(&quot;\\n&quot;);\n        input = in.next();\n        System.out.println(&quot;UserInput: &quot; + input);\n\n        return input;\n    }\n\n    public static void main(String[] args) {\n\n        Scanner in = new Scanner(System.in);\n\n        String s;\n        s = func(in);\n        System.out.println(&quot;Main: &quot; + s);\n\n        s = func(in);\n        System.out.println(&quot;Main: &quot; + s);\n    }\n}\n</code></pre>\n<p>and the following code WILL NOT WORK. this output the same problem as the thread:</p>\n<pre><code>import java.util.Scanner;\n\npublic class Main {\n\n    private static String func() {\n        String input = &quot;&quot;;\n        Scanner s = new Scanner(System.in);\n        input = s.nextLine();\n        System.out.println(&quot;UserInput: &quot; + input);\n\n        input = s.nextLine();\n        System.out.println(&quot;UserInput: &quot; + input);\n\n        s.close();\n\n        return input;\n    }\n\n    public static void main(String[] args) {\n\n        String s;\n        s = func();\n        System.out.println(&quot;Main: &quot; + s);\n\n        s = func();\n        System.out.println(&quot;Main: &quot; + s);\n    }\n}\n</code></pre>\n","answer_id":69900775,"question_id":15398703},{"owner":{"profile_image":"https://www.gravatar.com/avatar/3b168d32bf93a073301b3d9b4dc3c313?s=256&d=identicon&r=PG","account_id":410510,"user_type":"registered","user_id":782392,"link":"https://stackoverflow.com/users/782392/t3rm1","reputation":2319,"display_name":"T3rm1","accept_rate":67},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1636464598,"creation_date":1636464598,"body":"<p>Sometimes you don't want to give too much information to the user when an error occurs. For example, a user is not able to sign a new contract. The error message only states something generic like &quot;Cannot sign a new contract&quot;.</p>\n<p>This adds difficulty to support cases where the user thinks this is not correct. If you have an error code, for example a number or an acronym, it could be part of the error message. The user wouldn't know what it means but the support staff could look it up and could then check if that specific reason for declining the new contract is indeed an error or not.</p>\n","answer_id":69899028,"question_id":2792728},{"owner":{"profile_image":"https://lh3.googleusercontent.com/a-/AOh14Gi_2SecnhdWF6JIW5cIf9XSXnO1f05gHZVXLMgT=k-s256","account_id":19832429,"user_type":"registered","user_id":14526670,"link":"https://stackoverflow.com/users/14526670/makerstack","reputation":26,"display_name":"MakerStack"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":true,"last_activity_date":1636438949,"creation_date":1636438949,"body":"<p>Regular expression</p>\n<pre class=\"lang-java prettyprint-override\"><code>public static void main(String[] args) {\n        System.out.println(&quot;Please enter any word:&quot;);\n        try {\n            Scanner scan = new Scanner(System.in);\n            String item = scan.nextLine();\n\n            Pattern pattern = Pattern.compile(&quot;-?[0-9]+.?[0-9]+&quot;);\n            Matcher isNum = pattern.matcher(item);\n\n            if (isNum.matches()) {\n                throw new RuntimeException();\n            }\n        }catch (RuntimeException e) {\n            System.out.println(&quot;A problem occured:  &quot; + e);\n        }\n        System.out.println(&quot;Thank you for using my application.&quot;);\n\n    }\n</code></pre>\n","answer_id":69893623,"question_id":69892732},{"owner":{"profile_image":"https://lh3.googleusercontent.com/-nINGmWYdZ1Q/AAAAAAAAAAI/AAAAAAAAAtg/qbWMyoLYdnU/photo.jpg?sz=256","account_id":8416893,"user_type":"registered","user_id":6317014,"link":"https://stackoverflow.com/users/6317014/sakthikanth","reputation":139,"display_name":"Sakthikanth"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":false,"last_activity_date":1631606377,"creation_date":1475230990,"body":"<p>Try this code:</p>\n<pre><code>try{\n    throw new Exception(&quot;Test String&quot;);\n}\ncatch(Exception ex){\n    System.out.println(ex.getMessage());\n}\n</code></pre>\n","answer_id":39789268,"question_id":8895091,"last_edit_date":1631606377},{"owner":{"profile_image":"https://www.gravatar.com/avatar/a703ff464f13f37b4819e097b87d24ae?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":19702319,"user_type":"registered","user_id":14424782,"link":"https://stackoverflow.com/users/14424782/raiyan-shahid","reputation":49,"display_name":"Raiyan Shahid"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1620299882,"creation_date":1620299882,"body":"<p>Exception in java are runtime error which can be handled by the program, the process is called as exception handling. Parent class of exception is Throwable.\nException : Exception are those runtime error which can be handled by program.</p>\n<p>Error : Those runtime error which can’nt handled by the program.</p>\n<p>Tools used to handle Exception:</p>\n<p>Try\nCatch\nFinally\nThrow\nThrows</p>\n<p><a href=\"https://arzatechs.com/exception-in-java/\" rel=\"nofollow noreferrer\">more</a></p>\n","answer_id":67417054,"question_id":3625672},{"owner":{"profile_image":"https://i.stack.imgur.com/RyZ0y.png?s=256&g=1","account_id":8210377,"user_type":"registered","user_id":6178740,"link":"https://stackoverflow.com/users/6178740/suspicioususer","reputation":201,"display_name":"suspicioususer"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":true,"last_activity_date":1620249379,"creation_date":1620248932,"body":"<p>In here, you are increasing team count and trying to match a team that even doesn't exist.</p>\n<pre><code>if (numberOfTeams % 2 != 0) {\n    numberOfTeams++;\n    ghost = true;\n}\n</code></pre>\n<p>Let's assume you have 21 teams, last index in list of teams is <strong>20</strong> (index begins from zero). But &quot;numberOfTeams&quot; is 22. In this if block &quot;away&quot; will be 22 - 1 = 21 and then try to reach <strong>21st</strong> indexed team in list. But this team doesn't exist.</p>\n<pre><code>if (match == 0) {\n    away = numberOfTeams - 1;\n}\n\n//Here where it throws the exception\nfixtures.add(new MatchModel&lt;T&gt;(teams.get(home), teams.get(away)));\n</code></pre>\n<p>As a solution you can add empty team to list for bypass when team count is odd.</p>\n","answer_id":67408762,"question_id":67408280,"last_edit_date":1620249379},{"owner":{"profile_image":"https://i.stack.imgur.com/b3cUY.jpg?s=256&g=1","account_id":2593783,"user_type":"registered","user_id":5251245,"link":"https://stackoverflow.com/users/5251245/jameido","reputation":1344,"display_name":"Jameido"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1620232040,"creation_date":1620232040,"body":"<p>I had a similar problem in the past. Solved by adding the line below in the DexGuard configuration file</p>\n<pre><code>-keepresourcefiles lib/**.so\n</code></pre>\n<p>If you want to be more specific you can use this command instead</p>\n<pre><code>-keepresourcefiles lib/libsuprema_libusb.so\n</code></pre>\n<p>This way only the desired library inside the /lib folder will be kept.</p>\n<p>You can find all the different rules explanations in the DexGuard documentation (not public online)</p>\n","answer_id":67405232,"question_id":67404990},{"owner":{"profile_image":"https://i.stack.imgur.com/djTVv.jpg?s=256&g=1","account_id":6017640,"user_type":"registered","user_id":4725875,"link":"https://stackoverflow.com/users/4725875/devilshnd-%e9%80%80%e3%81%97%e3%81%9f","reputation":8919,"display_name":"DevilsHnd - 退した"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":true,"last_activity_date":1620216209,"creation_date":1620216209,"body":"<p>Here is yet another way to gather the Major and Minor version values from the line String:</p>\n<pre><code>String line = &quot;VERSION_ID=\\&quot;12.3\\&quot;&quot;;\n    \n// Bring line to lowercase to eliminate possible letter case \n// variations (if any) then see if 'version-id' is in the line:\nif (line.toLowerCase().contains(&quot;version_id&quot;)) {\n    // Remove all whitespaces and double-quotes from line then\n    // split the line regardless of whether or not there are\n    // whitespaces before or after the '=' character.\n    String version = line.replaceAll(&quot;[ \\&quot;]&quot;, &quot;&quot;).split(&quot;\\\\s*=\\\\s*&quot;)[1];\n    //Get version Major.\n    String major = version.split(&quot;[.]&quot;)[0];\n    // Get version Minor.\n    String minor = version.split(&quot;[.]&quot;)[1];\n    \n    // Display contents of all variables\n    System.out.println(&quot;Line:     --&gt; &quot; + line);\n    System.out.println(&quot;Version:  --&gt; &quot; + version);\n    System.out.println(&quot;Major:    --&gt; &quot; + major);\n    System.out.println(&quot;Minor:    --&gt; &quot; + minor);\n}\n</code></pre>\n","answer_id":67400921,"question_id":67400314},{"owner":{"profile_image":"https://www.gravatar.com/avatar/0074d7e02fb5c13d835313c307d9629d?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":16990325,"user_type":"registered","user_id":12290068,"link":"https://stackoverflow.com/users/12290068/maczosss","reputation":23,"display_name":"Maczosss"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1620215241,"creation_date":1620215241,"body":"<p>I think that when You are using split method on string like &quot;VERSION_ID=&quot;12.3&quot;&quot;, the output would be: String arr = {&quot;VERSION_ID&quot;, &quot;12.3&quot;}. So why are You using the next split with &quot;=&quot; on the ver_id array. Try using &quot;.&quot;, from my understanding You are looking for number after the dot.</p>\n","answer_id":67400661,"question_id":67400314},{"owner":{"profile_image":"https://www.gravatar.com/avatar/6d44e793ebafe3e3e4180f9e1e1c1687?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":19106369,"user_type":"registered","user_id":13953433,"link":"https://stackoverflow.com/users/13953433/jim","reputation":1,"display_name":"Jim"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1620214787,"creation_date":1620214787,"body":"<p>Try this !</p>\n<pre><code>File fobj2 = new File(&quot;C:\\\\os-release&quot;);\nif(fobj2.exists() &amp;&amp; !fobj2.isDirectory())\n{\nScanner sc = new Scanner(fobj2);\nwhile(sc.hasNextLine())\n    {\n     String line = sc.nextLine();\n     //VERSION_ID=&quot;12.3&quot;\n     if(line.contains(&quot;VERSION_ID=&quot;))\n     {\n     System.out.println(&quot; VERSION_ID= &quot; + line );\n     String [] ver = line.split(&quot;=&quot;);\n     if(ver.length &gt; 1)\n     {\n         String [] ver_id = line.split(&quot;=&quot;);\n         System.out.println(&quot; ver_id.length &quot; + ver_id.length );\n         System.out.println(&quot; ver_id[0] &quot; + ver_id[0] );\n         System.out.println(&quot; ver_id[1] &quot; + ver_id[1] );\n         System.out.println(&quot; ver_id[1].length() &quot; + ver_id[1].length() );\n             \n         // Here        \n         String [] FinalVer1 = ver_id[1].split(&quot;\\\\.&quot;);\n\n         System.out.println(&quot; FinalVer1[1].length() &quot; + FinalVer1[1].length() );\n         System.out.println(&quot; FinalVer1[1] &quot; + FinalVer1[1] );\n     }\n     }                   \n}\n</code></pre>\n<p>Just need to escape the dot like this.</p>\n","answer_id":67400552,"question_id":67400314},{"owner":{"profile_image":"https://i.stack.imgur.com/w5pwK.jpg?s=256&g=1","account_id":698222,"user_type":"registered","user_id":573032,"link":"https://stackoverflow.com/users/573032/roman-c","reputation":50202,"display_name":"Roman C","accept_rate":77},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1620184874,"creation_date":1360254953,"body":"<p>The <a href=\"https://struts.apache.org/core-developers/exception-interceptor.html\" rel=\"nofollow noreferrer\"><code>exception</code> interceptor</a> is already included in the <code>defaultStack</code>. Use the custom stack so that any exceptions not caught by the application will be logged and then handled by the global exception mapping</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;interceptors&gt;\n  &lt;interceptor-stack name=&quot;appDefaultStack&quot;&gt;\n    &lt;interceptor-ref name=&quot;defaultStack&quot;&gt;\n      &lt;param name=&quot;exception.logEnabled&quot;&gt;true&lt;/param&gt;\n      &lt;param name=&quot;exception.logLevel&quot;&gt;ERROR&lt;/param&gt;\n    &lt;/interceptor-ref&gt;\n  &lt;/interceptor-stack&gt;\n&lt;/interceptors&gt;\n&lt;default-interceptor-ref name=&quot;appDefaultStack&quot; /&gt;\n</code></pre>\n","answer_id":14756187,"question_id":14751256,"last_edit_date":1620184874},{"owner":{"profile_image":"https://i.stack.imgur.com/ZC8lF.jpg?s=256&g=1","account_id":20010953,"user_type":"registered","user_id":14667978,"link":"https://stackoverflow.com/users/14667978/bj%c3%b6rn-b%c3%bcttner","reputation":80,"display_name":"Bj&#246;rn B&#252;ttner"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1620139828,"creation_date":1620139828,"body":"<p>You'd need to have a testdouble for the LOGGER injected and then check that it is called with the expected blank string.</p>\n","answer_id":67387116,"question_id":67387023},{"owner":{"profile_image":"https://i.stack.imgur.com/jMY74.jpg?s=256&g=1","account_id":10595663,"user_type":"registered","user_id":7804477,"link":"https://stackoverflow.com/users/7804477/gautham-m","reputation":4835,"display_name":"Gautham M"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":true,"last_activity_date":1620057484,"creation_date":1620057115,"body":"<p>The control breaks out of the <code>for</code> loop as soon as the exception occurs. If you wanted the loop to continue, then each <code>try-catch</code> should be present to handle each <code>weight</code>. Otherwise, you could capture all the erroneous weights and then throw a single exception. You could refactor the code as:</p>\n<pre class=\"lang-java prettyprint-override\"><code>void productCheck(int[] weight) throws InvalidProductException {\n    List&lt;Integer&gt; errors = new ArrayList&lt;&gt;();\n    for (int i = 0; i &lt; weight.length; i++) {\n        System.out.println(&quot;Product --&gt;&quot;+weight[i]);\n        if (weight[i] &lt; 100) {\n            errors.add(Integer.valueOf(weight[i]));\n        }\n    }\n    if(!errors.isEmpty()){\n        System.out.println(&quot;Product exception for weights --&gt;&quot;+errors);\n        throw new InvalidProductException(&quot;Product Invalid&quot;);\n    }\n\n}\n</code></pre>\n","answer_id":67371946,"question_id":67371571,"last_edit_date":1620057484},{"owner":{"profile_image":"https://lh3.googleusercontent.com/-z38FvQGIbtU/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnqgtpiFhqOo8Ob06ss_UHdWrKKNw/photo.jpg?sz=256","account_id":10093978,"user_type":"registered","user_id":7460031,"link":"https://stackoverflow.com/users/7460031/zevrant","reputation":125,"display_name":"Zevrant"},"content_license":"CC BY-SA 4.0","score":3,"is_accepted":false,"last_activity_date":1620056672,"creation_date":1620056672,"body":"<p>As Andy stated your try catch is outside the scope of the for loop there for the productCheck method is exited when the exception is thrown and continues up the stack until it is caught in the main method. If you wish the productCheck to continue the for loop after you throw the exception the try catch must be located inside the for loop. See below.</p>\n<pre><code>public class Example1 {\n\nvoid productCheck(int[] weight) throws InvalidProductException {\n\n    for (int i = 0; i &lt; weight.length; i++) {\n        try {\n\n            System.out.println(&quot;Product --&gt;&quot;+weight[i]);\n            if (weight[i] &lt; 100) {\n                System.out.println(&quot;Product exception--&gt;&quot;+weight[i]);\n                throw new InvalidProductException(&quot;Product Invalid&quot;);\n            }\n        } catch (InvalidProductException ex) {\n            System.out.println(&quot;Caught the exception for Product&quot;);\n            System.out.println(ex.getMessage());\n        }     \n    }\n\n}\n\npublic static void main(String args[]) {\n    Example1 obj = new Example1();\n    \n    int[] weight = {110, 60, 10, 20, 100, 60 };\n    obj.productCheck(weight);\n}\n\n}\npublic class InvalidProductException extends Exception\n    {\npublic InvalidProductException(String s)\n    {\n    // Call constructor of parent Exception\n    super(s);\n    }\n}\n</code></pre>\n","answer_id":67371833,"question_id":67371571},{"owner":{"profile_image":"https://i.stack.imgur.com/Jzyj9.png?s=256&g=1","account_id":7991776,"user_type":"registered","user_id":6029429,"link":"https://stackoverflow.com/users/6029429/ranjan","reputation":390,"display_name":"Ranjan"},"content_license":"CC BY-SA 4.0","score":2,"is_accepted":false,"last_activity_date":1620056670,"creation_date":1620056670,"body":"<p>You are throwing the exception at method level, it will anyway terminate.</p>\n<p>One the exception is thrown, it will terminate the execution there itself and the exception will be caught in the try-catch block in the main method.</p>\n<p>SUGGESTED SOLUTION:</p>\n<p>Extract the loop outside of the method and put it in another method or the main method and add try-catch block inside the loop.</p>\n<p>OR</p>\n<p>Handle the error there itself instead of throwing exception.</p>\n","answer_id":67371832,"question_id":67371571},{"owner":{"profile_image":"https://www.gravatar.com/avatar/4f114223f6a38683d92ad30e5f0616da?s=256&d=identicon&r=PG","account_id":56079,"user_type":"registered","user_id":167973,"link":"https://stackoverflow.com/users/167973/carl","reputation":7550,"display_name":"Carl","accept_rate":82},"content_license":"CC BY-SA 4.0","score":2,"is_accepted":false,"last_activity_date":1598921463,"creation_date":1326805934,"body":"<p>The root <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Exception.html\" rel=\"nofollow noreferrer\"><code>Exception</code></a> class accepts a <code>String</code> custom message, as do (as far as I can tell) all of derivative classes.</p>\n<p>So: no, you don't need to create a custom class.  One of the existing exceptions probably covers your case (read their descriptions to find out which).  If none of those are really satisfactory, then you can create an extension of <code>Exception</code> (or <code>RuntimeException</code>, etc.) and maintain the custom message constructor.</p>\n","answer_id":8895178,"question_id":8895091,"last_edit_date":1598921463},{"owner":{"profile_image":"https://www.gravatar.com/avatar/c398e2c5f20e81b66cde0e5f7ee1908f?s=256&d=identicon&r=PG","account_id":1121838,"user_type":"registered","user_id":1110018,"link":"https://stackoverflow.com/users/1110018/baruch-dego","reputation":111,"display_name":"baruch dego"},"content_license":"CC BY-SA 4.0","score":4,"is_accepted":false,"last_activity_date":1598921420,"creation_date":1326805878,"body":"<p>The Exception class (its parent, actually - Throwable) takes a message as an argument in its constructor:</p>\n<p><code>throw new Exception(&quot;message&quot;)</code> or <code>Exception(&quot;message&quot;, innerException);</code></p>\n","answer_id":8895168,"question_id":8895091,"last_edit_date":1598921420},{"owner":{"profile_image":"https://www.gravatar.com/avatar/427c82231f69582a15326111e878511a?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":12202259,"user_type":"registered","user_id":8906268,"link":"https://stackoverflow.com/users/8906268/so-sc","reputation":17,"display_name":"so_sc"},"content_license":"CC BY-SA 4.0","score":1,"is_accepted":false,"last_activity_date":1561127402,"creation_date":1561120801,"body":"<p>Everyone explained pretty well on it. Let me answer when should this class be used.</p>\n\n<p><strong>When Should You Use NoSuchElementException?</strong></p>\n\n<p>Java includes a few different ways to iterate through elements in a collection. The first of these classes, Enumeration, was introduced in <code>JDK1.0</code> and is generally considered deprecated in favor of newer iteration classes, like Iterator and ListIterator. </p>\n\n<p>As with most programming languages, the Iterator class includes a <code>hasNext()</code> method that returns a boolean indicating if the iteration has anymore elements. If <code>hasNext()</code> returns <code>true</code>, then the <code>next()</code> method will return the next element in the iteration. Unlike Enumeration, Iterator also has a <code>remove()</code> method, which removes the last element that was obtained via <code>next()</code>. </p>\n\n<p>While Iterator is generalized for use with all collections in the <code>Java Collections Framework</code>, <code>ListIterator</code> is more specialized and only works with List-based collections, like <code>ArrayList</code>, <code>LinkedList</code>, and so forth. However, <code>ListIterator</code> adds even more functionality by allowing iteration to traverse in both directions via <code>hasPrevious()</code> and <code>previous()</code> methods.</p>\n","answer_id":56703665,"question_id":15398703,"last_edit_date":1561127402},{"owner":{"profile_image":"https://www.gravatar.com/avatar/564b38932e11a690bcb1304611275337?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":15512994,"user_type":"registered","user_id":11191320,"link":"https://stackoverflow.com/users/11191320/jayswal-mihir","reputation":1,"display_name":"Jayswal Mihir"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1552398656,"creation_date":1552398656,"body":"<pre><code>public class Main\n{\n    public static void main(String args[])\n    {\n        int a=10;\n        try\n        {\n            System.out.println(a/0); //Here it is not possible in maths so it goes to catch block \n        }\n        catch(ArithmeticException e)\n        {\n            System.out.println(\"Arithmetic Exception\");\n        }\n    }\n}\n</code></pre>\n\n<p>output:Arithmetic Exception</p>\n","answer_id":55123121,"question_id":3625672},{"owner":{"profile_image":"https://i.stack.imgur.com/fHmCQ.jpg?s=256&g=1","account_id":4284879,"user_type":"registered","user_id":3503023,"link":"https://stackoverflow.com/users/3503023/krishna-sharma","reputation":2858,"display_name":"Krishna Sharma"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1533020163,"creation_date":1533020163,"body":"<p><strong>There are 2 ways to set the icon in alert dialog</strong></p>\n\n<p>1) <code>AlertDialog.Builder setIcon(Drawable icon)</code>\nSet the Drawable to be used in the title.</p>\n\n<p><strong>Usage :</strong>  builder.setIcon(ContextCompat.getDrawable(context,R.drawable.video_downloader));</p>\n\n<p>2) <code>AlertDialog.Builder setIcon(int iconId)</code>\nSet the resource id of the Drawable to be used in the title.</p>\n\n<p><strong>Usage :</strong> builder.setIcon(R.drawable.video_downloader);</p>\n","answer_id":51607177,"question_id":51606891},{"owner":{"profile_image":"https://i.stack.imgur.com/oXvj2.jpg?s=256&g=1","account_id":9195148,"user_type":"registered","user_id":6834114,"link":"https://stackoverflow.com/users/6834114/omkar","reputation":3060,"display_name":"Omkar"},"content_license":"CC BY-SA 4.0","score":0,"is_accepted":false,"last_activity_date":1533019452,"creation_date":1533019452,"body":"<p>your error occured here <code>builder.setIcon(this.getDrawable(R.drawable.video_downloader));</code></p>\n\n<p>just try this </p>\n\n<pre><code>// Setting Icon to Dialog\n    alertDialog.setIcon(R.drawable.video_downloader);\n</code></pre>\n\n<p>refer <a href=\"https://www.androidhive.info/2011/09/how-to-show-alert-dialog-in-android/\" rel=\"nofollow noreferrer\">this</a></p>\n","answer_id":51606961,"question_id":51606891},{"owner":{"profile_image":"https://lh6.googleusercontent.com/-eAMgDIifZ0A/AAAAAAAAAAI/AAAAAAAACxQ/3fElJVKdhJE/photo.jpg?sz=256","account_id":6751195,"user_type":"registered","user_id":5201137,"link":"https://stackoverflow.com/users/5201137/shubham-vala","reputation":1034,"display_name":"Shubham Vala"},"content_license":"CC BY-SA 4.0","score":3,"is_accepted":true,"last_activity_date":1533019361,"creation_date":1533019361,"body":"<p>try this,</p>\n\n<pre><code>   AlertDialog.Builder builder = new AlertDialog.Builder(this);\n\n   builder.setIcon(getResources().getDrawable(R.drawable.video_downloader));\n\n   builder.setTitle(\"Congratulations !!!\");\n\n   builder.show();\n</code></pre>\n","answer_id":51606936,"question_id":51606891},{"owner":{"profile_image":"https://i.stack.imgur.com/ZQaQ8.jpg?s=256&g=1","account_id":10396927,"user_type":"registered","user_id":7666442,"link":"https://stackoverflow.com/users/7666442/asknilesh","reputation":68267,"display_name":"AskNilesh"},"content_license":"CC BY-SA 4.0","score":2,"is_accepted":false,"last_activity_date":1533019309,"creation_date":1533019309,"body":"<p>Use this</p>\n\n<pre><code>builder.setIcon(ContextCompat.getDrawable(MyActivity.this,R.drawable.video_downloader));\n</code></pre>\n\n<p>instead of this</p>\n\n<pre><code>builder.setIcon(this.getDrawable(R.drawable.video_downloader));\n</code></pre>\n\n<p><strong>FYI</strong>  </p>\n\n<p><a href=\"https://developer.android.com/reference/android/content/res/Resources.html#getDrawable(int)\" rel=\"nofollow noreferrer\"><strong><code>getDrawable()</code></strong></a> method was deprecated in API level 22.</p>\n","answer_id":51606926,"question_id":51606891},{"owner":{"profile_image":"https://www.gravatar.com/avatar/113b0b46b3de42ce4dee28c6006a85c5?s=256&d=identicon&r=PG","account_id":63444,"user_type":"registered","user_id":187808,"link":"https://stackoverflow.com/users/187808/tamas-rev","reputation":7018,"display_name":"Tamas Rev","accept_rate":100},"content_license":"CC BY-SA 3.0","score":2,"is_accepted":false,"last_activity_date":1504773032,"creation_date":1504772471,"body":"<p>As others pointed out, you cannot move back there. However, you might be able to <a href=\"https://refactoring.com/catalog/extractMethod.html\" rel=\"nofollow noreferrer\">refactor</a> <code>Parent.foo()</code> to something like this:</p>\n\n<pre><code>class ParentClass {\n    protected void foo() { //  made it protected so it's overridable\n       stuffBeforeNPE(); // Extract Method Refactoring\n       codeWithPossiblyNPE(); // Extract Method Refactoring\n       stuffAfterNPE(); // Extract Method Refactoring\n    }\n\n    protected void stuffBeforeNPE() { ... } // you might want to add params and return values\n    protected void codeWithPossiblyNPE() { ... }\n    stuffAfterNPE() { ... }\n}\n</code></pre>\n\n<p>Now, your child class might look like this:</p>\n\n<pre><code>class SubClass extends ParentClass {\n    @Override\n    protected void foo() {\n      stuffBeforeNPE();\n       try {\n          codeWithPossiblyNPE();\n       } catch(NullPointerException npe) {\n          … /*handle exception*/\n       }\n       stuffAfterNPE();\n    }\n}\n</code></pre>\n","answer_id":46091396,"question_id":46091211,"last_edit_date":1504773032},{"owner":{"profile_image":"https://i.stack.imgur.com/5DblQ.png?s=256&g=1","account_id":8326,"user_type":"registered","user_id":14955,"link":"https://stackoverflow.com/users/14955/thilo","reputation":258555,"display_name":"Thilo","accept_rate":55},"content_license":"CC BY-SA 3.0","score":3,"is_accepted":true,"last_activity_date":1504772496,"creation_date":1504772013,"body":"<p>No.</p>\n\n<p>You cannot just jump back into the middle of a method.</p>\n\n<p>If you don't want to copy-paste the code in there (good call!) you have to put the shared code into a separate method that your subclass can call.</p>\n\n<p>Or you could put the part that might throw the NullPointerException into a separate method and override it in the subclass (so that it no longer throws).</p>\n\n<blockquote>\n  <p>But due to a different instantiation in SubClass, this problem may arise.</p>\n</blockquote>\n\n<p>Maybe you can sidestep the exception altogether by changing the way you do this instantiation? Maybe provide a \"dummy object\" for the thing that is currently <code>null</code>? Something that doesn't do anything harmful, but prevents the exception?</p>\n","answer_id":46091271,"question_id":46091211,"last_edit_date":1504772496},{"owner":{"profile_image":"https://www.gravatar.com/avatar/d22d90f2f8540bcde8f357673a1d4873?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":7498180,"user_type":"registered","user_id":5697607,"link":"https://stackoverflow.com/users/5697607/vamshi-rakela","reputation":43,"display_name":"Vamshi Rakela"},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1450770003,"creation_date":1450768754,"body":"<p><code>FileSystemException</code> may be the specific exception you are looking for.</p>\n\n<p>Although, a better idea for beginners is to catch an exception and print it using</p>\n\n<p><code>System.out.println(e);</code></p>\n\n<p>where <code>e</code> is the caught exception.</p>\n","answer_id":34410412,"question_id":3625672,"last_edit_date":1450770003},{"owner":{"user_type":"does_not_exist","display_name":"user5507680"},"content_license":"CC BY-SA 3.0","score":23,"is_accepted":false,"last_activity_date":1447321797,"creation_date":1447320732,"body":"<p>You can only set the message at the creation of the exception. Here is an example if you want to set it after the creation.</p>\n\n<pre><code>public class BusinessException extends RuntimeException{\n\n    private Collection&lt;String&gt; messages;\n\n    public BusinessException(String msg){\n        super(msg);\n    }\n\n\n    public BusinessException(String msg, Exception cause){\n        super(msg, cause);\n    }\n\n\n    public BusinessException(Collection&lt;String&gt; messages){\n        super();\n        this.messages= messages;\n    }\n\n\n    public BusinessException (Collection&lt;String&gt; messages, Exception cause){\n        super(cause);\n        this.messages= messages;\n    }\n\n    @Override\n    public String getMessage(){\n        String msg;\n\n        if(this.messages!=null &amp;&amp; !this.messages.isEmpty()){\n            msg=\"[\";\n\n            for(String message : this.messages){\n                msg+=message+\",\";\n            }\n\n            msg= StringUtils.removeEnd(msg, \",\")+\"]\";\n\n        }else msg= super.getMessage();\n\n        return msg;\n    }\n\n}\n</code></pre>\n","answer_id":33668202,"question_id":8895091,"last_edit_date":1447321797},{"owner":{"profile_image":"https://www.gravatar.com/avatar/76eb040bed8dc544b5b71aeb2d1a81ad?s=256&d=identicon&r=PG","account_id":19562,"user_type":"registered","user_id":45935,"link":"https://stackoverflow.com/users/45935/jim-ferrans","reputation":30712,"display_name":"Jim Ferrans","accept_rate":100},"content_license":"CC BY-SA 3.0","score":6,"is_accepted":false,"last_activity_date":1433053564,"creation_date":1246481762,"body":"<p>Be sure not to go overboard with exceptions, especially checked exceptions.  I'd recommend reading Chapter 9 of Joshua Bloch's Effective Java, and in particular his Item 60 (Favor the use of standard exceptions).  His recommendations also include using checked exceptions for exceptions that can be recovered from, using unchecked exceptions (RuntimeExceptions) for programming errors, and avoiding the unnecessary use of checked exceptions. </p>\n\n<p>If an InvalidBankAccount exception is thrown whenever an programming error is found, you probably just want to throw a standard unchecked Java IllegalStateException instead.  (This neatly sidesteps the need to declare serialVersionUID.)</p>\n","answer_id":1071352,"question_id":1070590,"last_edit_date":1433053564},{"owner":{"profile_image":"https://www.gravatar.com/avatar/0382297f273df0a544b0c6c2734de096?s=256&d=identicon&r=PG","account_id":9193,"user_type":"registered","user_id":16883,"link":"https://stackoverflow.com/users/16883/michael-borgwardt","reputation":343123,"display_name":"Michael Borgwardt","accept_rate":83},"content_license":"CC BY-SA 3.0","score":17,"is_accepted":true,"last_activity_date":1415385425,"creation_date":1283419317,"body":"<pre><code>for(File f : files){\n   try {\n       process(f); // may throw various exceptions\n   } catch (Exception e) {\n       logger.error(e.getMessage(), e);\n   }\n}\n</code></pre>\n","answer_id":3625721,"question_id":3625672,"last_edit_date":1415385425},{"owner":{"profile_image":"https://www.gravatar.com/avatar/88dc87a6d2adc2241fab16bd958f3a88?s=256&d=identicon&r=PG","account_id":1297352,"user_type":"registered","user_id":2439715,"link":"https://stackoverflow.com/users/2439715/abhishek-goel","reputation":19013,"display_name":"Abhishek Goel","accept_rate":76},"content_license":"CC BY-SA 3.0","score":5,"is_accepted":false,"last_activity_date":1414688949,"creation_date":1414688949,"body":"<p>simply don't close in</p>\n\n<p>remove <code>in.close()</code> from your code.</p>\n","answer_id":26659191,"question_id":15398703},{"owner":{"profile_image":"https://www.gravatar.com/avatar/7331c9c20d99e89d6537645dd1deb34c?s=256&d=identicon&r=PG","account_id":2379,"user_type":"registered","user_id":3295,"link":"https://stackoverflow.com/users/3295/toolkit","reputation":49909,"display_name":"toolkit","accept_rate":62},"content_license":"CC BY-SA 3.0","score":33,"is_accepted":false,"last_activity_date":1401171975,"creation_date":1246472405,"body":"<p>just extend either</p>\n\n<ul>\n<li><code>Exception</code>, if you want your exception to be checked (i.e: required in a throws clause)</li>\n<li><code>RuntimeException</code>, if you want your exception to be unchecked.</li>\n</ul>\n","answer_id":1070604,"question_id":1070590,"last_edit_date":1401171975},{"owner":{"profile_image":"https://www.gravatar.com/avatar/3e26b08aa9c9bff40d6dab7b98680bf4?s=256&d=identicon&r=PG","account_id":673865,"user_type":"registered","user_id":889053,"link":"https://stackoverflow.com/users/889053/christian-bongiorno","reputation":5306,"display_name":"Christian Bongiorno","accept_rate":38},"content_license":"CC BY-SA 3.0","score":2,"is_accepted":false,"last_activity_date":1400007202,"creation_date":1400007202,"body":"<p>I have answered this previously <a href=\"https://stackoverflow.com/questions/23408923/for-a-large-validation-task-is-chain-of-responsibility-pattern-a-good-bet/23501390#23501390\">Here</a></p>\n\n<p>The answer marked as good is an example of the Composite pattern being applied to validation (almost)</p>\n\n<p>There are, of course, tons of frameworks for this. Something clever you could do, that I have used to great effect, is to use an aspect + a validator or make sure whole swaths of new and existing code get checked auto-magically. </p>\n\n<pre><code>@Aspect\npublic class DtoValidator {\n\nprivate Validator validator;\n\npublic DtoValidator() {\n}\n\npublic DtoValidator(Validator validator) {\n    this.validator = validator;\n}\n\npublic void doValidation(JoinPoint jp){\n    for( Object arg : jp.getArgs() ){\n        if (arg != null) {\n            Set&lt;ConstraintViolation&lt;Object&gt;&gt; violations = validator.validate(arg);\n            if( violations.size() &gt; 0 ){\n                throw buildError(violations);\n            }\n        }\n    }\n}\n\nprivate static BadRequestException buildError( Set&lt;ConstraintViolation&lt;Object&gt;&gt; violations ){\n    Map&lt;String, String&gt; errorMap = new HashMap&lt;String, String&gt;();\n    for( ConstraintViolation error : violations ){\n        errorMap.put(error.getPropertyPath().toString(), error.getMessage());\n    }\n    return new BadRequestException(errorMap);\n}\n}\n</code></pre>\n\n<p>Here is a snip of bean config</p>\n\n<pre><code>&lt;aop:config proxy-target-class=\"true\"&gt;\n    &lt;aop:aspect id=\"dtoValidator\" ref=\"dtoValidator\" order=\"10\"&gt;\n        &lt;aop:before method=\"doValidation\"\n                    pointcut=\"execution(public * com.mycompany.ws.controllers.bs.*.*(..))\"/&gt;\n    &lt;/aop:aspect&gt;\n&lt;/aop:config&gt;\n</code></pre>\n\n<p>Now all of your controller methods will have that validation code applied here and into the future. </p>\n","answer_id":23639340,"question_id":23625440,"last_edit_date":1495540817},{"owner":{"profile_image":"https://www.gravatar.com/avatar/9420b13f41ea0c28b268d819209069a9?s=256&d=identicon&r=PG","account_id":13508,"user_type":"registered","user_id":27198,"link":"https://stackoverflow.com/users/27198/itay-maman","reputation":30357,"display_name":"Itay Maman","accept_rate":72},"content_license":"CC BY-SA 3.0","score":3,"is_accepted":true,"last_activity_date":1399968815,"creation_date":1399968470,"body":"<p>You can do the following:</p>\n\n<p>define an abstract Check class, as follows:</p>\n\n<pre><code>public abstract class Check {\n  private final List&lt;Check&gt; subChecks = new ArrayList&lt;Check&gt;();\n\n  public Check add(Check subCheck) { subChecks.add(subCheck); return this }\n\n  public void run(Data dataToInspect, List&lt;Error&gt; errors) {\n    Error e = check(dataToInspect);\n    if (e != null) {\n       errors.add(e);\n       return;\n    }\n    for (Check subCheck : subChecks) {\n      subCheck.run(dataToInspect, errors);\n    }\n  }\n\n  // Returns null if dataToInspect is OK.\n  public abstract Error check(Data dataToInspect);\n}\n</code></pre>\n\n<p>class <code>Data</code> is the class holding the data (that needs to be checked). Can be a String, a JSON object, what have you.</p>\n\n<p>class <code>Error</code> represents a problem detected in the data should be roughly something like:</p>\n\n<pre><code>public class Error {\n  private String problem;\n  public Error(String problem) { this.problem = problem }\n  public String getProblem() { return problem }\n  // maybe additional fields and method to better describe the detected problem...\n}\n</code></pre>\n\n<p>You then have code that runs the check against piece of data:</p>\n\n<pre><code>public class Checker {\n\n   private final List&lt;Error&gt; errors = new ArrayList&lt;Error&gt;();\n   private final List&lt;Check&gt; checks = new ArrayList&lt;Check&gt;();\n\n   public Checker() {\n     checks.add(new DateIsParsableCheck().add(new DateIsInTheFurutreCheck());\n     checks.add(new UrlIsWellFormed().add(new UrlIsAccessible());\n\n     checks.add();\n     ..\n   }\n\n   public void check(Data d) {\n     for (Check c : checks) {\n       Error e = c.run(d, errors);\n       if (e != null) \n         errors.add(e);\n     }\n   }\n}\n</code></pre>\n\n<p>Slightly changed my original answer. In the current answer there is the notion of subchecks:  if a check called <code>x</code> has a subcheck called <code>y</code> then the <code>y</code> check will run only if the <code>x</code> check succeeded. For instance, if the Date is not parseable there is no point to check it it is in the future. </p>\n\n<p>In your case I think that all/most logical check should be sub-checks of a formal check.</p>\n","answer_id":23625868,"question_id":23625440,"last_edit_date":1399968815},{"owner":{"profile_image":"https://i.stack.imgur.com/yaE6t.png?s=256&g=1","account_id":3446101,"user_type":"registered","user_id":2886891,"link":"https://stackoverflow.com/users/2886891/honza-zidek","reputation":11395,"display_name":"Honza Zidek","accept_rate":75},"content_license":"CC BY-SA 3.0","score":0,"is_accepted":false,"last_activity_date":1399968246,"creation_date":1399968246,"body":"<p>I would simply pass around a list of all the errors. The items in the list may not be just exceptions, but rather some objects wrapping more information about the errors, such as name of wrong parameter, its wrong value, position of the error in the string, type of validation (formal, ligical), ID of the error message for localized display to user... Each method on the processing path may append to the list.</p>\n","answer_id":23625821,"question_id":23625440},{"owner":{"profile_image":"https://i.stack.imgur.com/fl1Jg.jpg?s=256&g=1","account_id":557322,"user_type":"registered","user_id":919710,"link":"https://stackoverflow.com/users/919710/alexandre-santos","reputation":8250,"display_name":"Alexandre Santos","accept_rate":80},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1399968202,"creation_date":1399968202,"body":"<p>Designing it using exceptions will work, but you will have to write a whole framework to deal with exceptions, many of which can't be handled by your exception interceptor. If you feel the coding itch, then go for it. My advice would be to have different classes of exceptions. Some of them would be critical exceptions, some would be just warnings... you got the picture.</p>\n\n<p>You could (I hope you do) use a proven framework that can handle that beautifully. I speak of JSR 303 and Bean Validation through Spring: <a href=\"http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/validation.html\" rel=\"nofollow\">http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/validation.html</a></p>\n\n<p>It takes a while to get used to, but it will pay you back 1000 fold.</p>\n","answer_id":23625804,"question_id":23625440},{"owner":{"profile_image":"https://www.gravatar.com/avatar/02e1e5ac4f5c3e32859dede277dfd64b?s=256&d=identicon&r=PG","account_id":6356,"user_type":"registered","user_id":10659,"link":"https://stackoverflow.com/users/10659/loren-pechtel","reputation":8963,"display_name":"Loren Pechtel","accept_rate":51},"content_license":"CC BY-SA 3.0","score":22,"is_accepted":true,"last_activity_date":1376514349,"creation_date":1273291321,"body":"<p><strong>WITHIN</strong> a program one should always use exceptions instead of error codes.  However, exceptions can't propagate beyond a program.  Any time the error must leave the program you are left with error messages or error codes.</p>\n\n<p>For simple things that will always be human-operated error messages without codes are fine.  You can say \"File not found\" without giving it an error code.  However, if it might be another computer on the other end then you should give error codes in addition.  You don't want to break the other system when you change it to \"File &lt;x&gt; not found\".</p>\n","answer_id":2792895,"question_id":2792728,"last_edit_date":1376514349},{"owner":{"profile_image":"https://i.stack.imgur.com/TgXEW.png?s=256&g=1","account_id":794766,"user_type":"registered","user_id":871026,"link":"https://stackoverflow.com/users/871026/reimeus","reputation":158675,"display_name":"Reimeus","accept_rate":76},"content_license":"CC BY-SA 3.0","score":30,"is_accepted":true,"last_activity_date":1363263937,"creation_date":1363219600,"body":"<p>You close the second <code>Scanner</code> which closes the underlying <code>InputStream</code>, therefore the first <code>Scanner</code> can no longer read from the same <code>InputStream</code> and a <code>NoSuchElementException</code> results.</p>\n\n<p>The solution: For console apps, use a single <code>Scanner</code> to read from <code>System.in</code>.</p>\n\n<p><em>Aside:</em> As stated already, be aware that <code>Scanner#nextInt</code> does not consume newline characters. Ensure that these are consumed before attempting to call <code>nextLine</code> again by using <code>Scanner#newLine()</code>.</p>\n\n<p>See: <a href=\"https://www.securecoding.cert.org/confluence/display/java/FIO06-J.+Do+not+create+multiple+buffered+wrappers+on+a+single+InputStream\" rel=\"noreferrer\">Do not create multiple buffered wrappers on a single InputStream</a></p>\n","answer_id":15398862,"question_id":15398703,"last_edit_date":1363263937},{"owner":{"profile_image":"https://i.stack.imgur.com/XpiU6.jpg?s=256&g=1","account_id":2189891,"user_type":"registered","user_id":1937270,"link":"https://stackoverflow.com/users/1937270/syb0rg","reputation":8117,"display_name":"syb0rg","accept_rate":91},"content_license":"CC BY-SA 3.0","score":12,"is_accepted":false,"last_activity_date":1363220734,"creation_date":1363218895,"body":"<p>The <code>nextInt()</code> method leaves the <code>\\n</code> (end line) symbol and is picked up immediately by <code>nextLine()</code>, skipping over the next input.  What you want to do is use <code>nextLine()</code> for everything, and parse it later:</p>\n\n<pre><code>String nextIntString = keyboard.nextLine(); //get the number as a single line\nint nextInt = Integer.parseInt(nextIntString); //convert the string to an int\n</code></pre>\n\n<p>This is by far the easiest way to avoid problems--don't mix your \"next\" methods.  Use only <code>nextLine()</code> and then parse <code>int</code>s or separate words afterwards.</p>\n\n<hr>\n\n<p>Also, make sure you use only one <code>Scanner</code> if your are only using one terminal for input.  That could be another reason for the exception.</p>\n\n<hr>\n\n<p>Last note: compare a <code>String</code> with the <code>.equals()</code> function, not the <code>==</code> operator.</p>\n\n<pre><code>if (playAgain == \"yes\"); // Causes problems\nif (playAgain.equals(\"yes\")); // Works every time\n</code></pre>\n","answer_id":15398752,"question_id":15398703,"last_edit_date":1363220734},{"owner":{"profile_image":"https://www.gravatar.com/avatar/c1a0d17859d03349b3f832e2a3cb1d0c?s=256&d=identicon&r=PG","account_id":2480448,"user_type":"registered","user_id":2160028,"link":"https://stackoverflow.com/users/2160028/cwhsu","reputation":1503,"display_name":"cwhsu","accept_rate":100},"content_license":"CC BY-SA 3.0","score":1,"is_accepted":false,"last_activity_date":1363220124,"creation_date":1363220124,"body":"<p>Reimeus is right, you see this because of <strong>in.close</strong> in your <strong>chooseCave()</strong>.\nAlso, this is wrong.</p>\n\n<pre><code>if (playAgain == \"yes\") {\n      play = true;\n}\n</code></pre>\n\n<p>You should use equals instead of \"==\".</p>\n\n<pre><code>if (playAgain.equals(\"yes\")) {\n      play = true;\n}\n</code></pre>\n","answer_id":15398950,"question_id":15398703},{"owner":{"profile_image":"https://www.gravatar.com/avatar/11c56b07a08ba381090605a5904dc0e4?s=256&d=identicon&r=PG","account_id":89020,"user_type":"registered","user_id":245860,"link":"https://stackoverflow.com/users/245860/claudio-redi","reputation":67692,"display_name":"Claudio Redi","accept_rate":82},"content_license":"CC BY-SA 3.0","score":9,"is_accepted":false,"last_activity_date":1326997091,"creation_date":1273287487,"body":"<p>Very common for web service interfaces. It's very easy and standard to return a code with a description.</p>\n\n<p>I agree that for most of the scenarios is old school</p>\n\n<p>I'd say the biggest disadvantages it's the quality of code. You have to add more complex logic to manage error codes while exceptions are bubbled without having to use method parameters or return values. </p>\n\n<p>You also have to add an \"IF\" to check if the returned code is SUCCESS or not, while exceptions goes directly to the error handling block. </p>\n","answer_id":2792783,"question_id":2792728,"last_edit_date":1326997091},{"owner":{"profile_image":"https://www.gravatar.com/avatar/39356a03a418d3e4c53aafcfe11a7cab?s=256&d=identicon&r=PG","account_id":18374,"user_type":"registered","user_id":42059,"link":"https://stackoverflow.com/users/42059/sam","reputation":2939,"display_name":"Sam"},"content_license":"CC BY-SA 3.0","score":3,"is_accepted":false,"last_activity_date":1326805794,"creation_date":1326805794,"body":"<p>The best approach is to wrap the exception.</p>\n\n<pre><code>try {\n    my code that throws E;\n} catch (final E e) {\n    throw new MyE(\"my message\", e);\n}\n</code></pre>\n","answer_id":8895148,"question_id":8895091},{"owner":{"profile_image":"https://www.gravatar.com/avatar/748cd1dcd917caf10ff85ef46fc44d79?s=256&d=identicon&r=PG","account_id":1147479,"user_type":"registered","user_id":1129916,"link":"https://stackoverflow.com/users/1129916/quaylar","reputation":2617,"display_name":"quaylar","accept_rate":90},"content_license":"CC BY-SA 3.0","score":15,"is_accepted":true,"last_activity_date":1326805712,"creation_date":1326805712,"body":"<p>Well, if the API offers an exception that suits your needs (IllegalArgumentException for example), just use it and pass your message in the constructor.</p>\n","answer_id":8895131,"question_id":8895091},{"owner":{"profile_image":"https://www.gravatar.com/avatar/f1ed2b0c87f602ef30229f5c4b04eff6?s=256&d=identicon&r=PG","account_id":152622,"user_type":"registered","user_id":367273,"link":"https://stackoverflow.com/users/367273/npe","reputation":490044,"display_name":"NPE","accept_rate":96},"content_license":"CC BY-SA 3.0","score":40,"is_accepted":false,"last_activity_date":1326805656,"creation_date":1326805656,"body":"<p>Most standard exception classes provide a constructor that takes a mesage, for example:</p>\n\n<pre><code>public UnsupportedOperationException(String message) {\n    super(message);\n}\n</code></pre>\n\n<p>The above class simply calls its parent's constructor, which calls its parent's constructor, and so on, ultimately culminating in:</p>\n\n<pre><code>public Throwable(String message) {\n    ...\n}\n</code></pre>\n\n<p>If you create your own exception class, I think it's a good idea to following this convention.</p>\n","answer_id":8895117,"question_id":8895091},{"owner":{"profile_image":"https://www.gravatar.com/avatar/28d048fac5e3ee385b01370382a6e987?s=256&d=identicon&r=PG","account_id":185700,"user_type":"registered","user_id":422597,"link":"https://stackoverflow.com/users/422597/colin-hebert","reputation":91879,"display_name":"Colin Hebert"},"content_license":"CC BY-SA 2.5","score":11,"is_accepted":false,"last_activity_date":1283420375,"creation_date":1283419069,"body":"<p>You have to use the try/catch/finally blocs.</p>\n\n<pre><code>try{  \n    //Sensitive code  \n} catch(ExceptionType e){  \n    //Handle exceptions of type ExceptionType or its subclasses  \n} finally {  \n    //Code ALWAYS executed  \n}\n</code></pre>\n\n<ul>\n<li><code>try</code> will allow you to execute sensitive code which could throw an exception.</li>\n<li><code>catch</code> will handle a particular exception (or any subtype of this exception).</li>\n<li><code>finally</code> will help to execute statements even if an exception is thrown and not catched.</li>\n</ul>\n\n<p>In your case</p>\n\n<pre><code>for(File f : getFiles()){\n    //You might want to open a file and read it\n    InputStream fis;\n    //You might want to write into a file\n    OutputStream fos;\n    try{\n        handleFile(f);\n        fis = new FileInputStream(f);\n        fos = new FileOutputStream(f);\n    } catch(IOException e){\n        //Handle exceptions due to bad IO\n    } finally {\n        //In fact you should do a try/catch for each close operation.\n        //It was just too verbose to be put here.\n        try{\n            //If you handle streams, don't forget to close them.\n            fis.close();\n            fos.close();\n        }catch(IOException e){\n            //Handle the fact that close didn't work well.\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Resources :</strong></p>\n\n<ul>\n<li><a href=\"http://download.oracle.com/javase/tutorial/essential/exceptions/\" rel=\"noreferrer\">oracle.com - Lesson: Exceptions</a></li>\n<li><a href=\"http://java.sun.com/docs/books/jls/third_edition/html/exceptions.html\" rel=\"noreferrer\">JLS - exceptions</a></li>\n</ul>\n","answer_id":3625697,"question_id":3625672,"last_edit_date":1283420375},{"owner":{"profile_image":"https://i.stack.imgur.com/C7rRA.png?s=256&g=1","account_id":92026,"user_type":"registered","user_id":1977903,"link":"https://stackoverflow.com/users/1977903/bragboy","reputation":35060,"display_name":"bragboy","accept_rate":96},"content_license":"CC BY-SA 2.5","score":0,"is_accepted":false,"last_activity_date":1283420246,"creation_date":1283420246,"body":"<p>Typically, I would have done this.</p>\n\n<pre><code>ArrayList&lt;Entry&gt; allEntries = getAllEntries();\n\nfor(Entry eachEntry:allEntries){\n  try{\n    //do all your processing for eachEntry\n  } catch(Exception e{\n     ignoredEntries.add(eachEntry);\n     //if concerned, you can store even the specific problem.\n  } finally{\n     //In case of resource release\n  }\n}\n\nif(ignoredEntries.size() &gt; 0){\n  //Handle this scenario, may be display the error to the user\n}\n</code></pre>\n","answer_id":3625832,"question_id":3625672},{"owner":{"profile_image":"https://www.gravatar.com/avatar/b10d28674476d07c95aeb9769e28f78d?s=256&d=identicon&r=PG","account_id":192063,"user_type":"registered","user_id":432997,"link":"https://stackoverflow.com/users/432997/jonwillis","reputation":3148,"display_name":"JonWillis","accept_rate":100},"content_license":"CC BY-SA 2.5","score":2,"is_accepted":false,"last_activity_date":1283419544,"creation_date":1283419171,"body":"<p>I guess your new to programming as execeptions are a fairly fundermental concept, as problems can happen out of your control and you need to deal with it.</p>\n\n<p>The basic premise is a try catch block.</p>\n\n<pre><code>try\n{\n    //Your code here that causes problems\n}\ncatch(exception ex)\n{\n    //Your code to handle the exception\n}\n</code></pre>\n\n<p>You 'try' your code, and if an exception is raised, you 'catch' it. And do what you need.\nThere is also an addition to the catch block in that you can add finally{} below it. Basically even if no exception is raised the finally code is still run. You may wonder the point in this, but its often used with streams/file handling etc to close the stream.</p>\n\n<p>Read more on java exceptions here in tutorials written by Sun (now Oracle)- <a href=\"http://download.oracle.com/javase/tutorial/essential/exceptions/\" rel=\"nofollow noreferrer\">http://download.oracle.com/javase/tutorial/essential/exceptions/</a></p>\n\n<pre><code>try\n{\n    //Your code here that causes problems\n}\ncatch(exception ex)\n{\n    //Your code to handle the exception\n}\nfinally\n{\n    //Always do this, i.e. try to read a file, catch any errors, always close the file\n}\n</code></pre>\n\n<p>The question you may ask is how do you catch different exceptions, i.e. is it a null reference, is it divide by zero, is it no file found or file not writeable etc. For this you write several different catch blocks under the try, basically one catch for each type of exception, the use of \"exception\" is basically a catch all statement, and like in stack of if statements if an \"exception\" is the first catch block it will catch everything, so if you have several catch blocks ensure exception is the last one.</p>\n\n<p>Again, this is a useful but large topic so you need to read up about it.</p>\n\n<p>Since you are doing multiple files, you need to basically do a loop and within the loop is contained the try/catch block.</p>\n\n<p>so even if one file fails, you catch it, but carry on running, the code will then loop around onto the next file unhindered.</p>\n","answer_id":3625705,"question_id":3625672,"last_edit_date":1283419544},{"owner":{"profile_image":"https://i.stack.imgur.com/8IxBe.png?s=256&g=1","account_id":12258,"user_type":"registered","user_id":24046,"link":"https://stackoverflow.com/users/24046/nkr1pt","reputation":4701,"display_name":"nkr1pt","accept_rate":94},"content_license":"CC BY-SA 2.5","score":0,"is_accepted":false,"last_activity_date":1283419074,"creation_date":1283419074,"body":"<p>just catch the excpetion it may throw and do nothing with it; eat it as people say :)\nBut at least log it!</p>\n\n<p>Very concise example:</p>\n\n<pre><code>try {\n   your code...\n} catch (Exception e) {\n   log here\n}\n</code></pre>\n","answer_id":3625698,"question_id":3625672},{"owner":{"profile_image":"https://www.gravatar.com/avatar/7035191aae631e8c22594242ce3edd50?s=256&d=identicon&r=PG&f=y&so-version=2","account_id":43031,"user_type":"registered","user_id":125601,"link":"https://stackoverflow.com/users/125601/robert-fraser","reputation":10689,"display_name":"Robert Fraser","accept_rate":90},"content_license":"CC BY-SA 2.5","score":6,"is_accepted":false,"last_activity_date":1273346078,"creation_date":1273286754,"body":"<p>I frequently use error codes when an error needs to be conveyed to the user, since they can be internationalized. For example, in a compiler, if there are errors in user code, errors can be signaled in the compiler backend, while the frontend can localize them into culture/language-specific strings for user consumption. Enums may be better for this purpose than raw integers, however.</p>\n\n<p>I've also used them in creating an \"error reporting\" framework for the app. When exceptions were thrown, they were thrown with an error code, which, when the exception bubbled up, was sent (with a log) to the central server. The code helped organize the database so we could inspect logs related to a specific error.</p>\n\n<p>Finally, as mentioned in a couple other answers, error codes are easy and language-agnostic to google (think Windows error codes/MS KB articles), so an error code <em>with</em> a description of what went wrong may be better for end-users of a technical product.</p>\n\n<p>The idea of error codes is useful, but IMO they belong as exception members or as parameters to an IErrorReporter interface or something more ofthen than as method return values.</p>\n","answer_id":2792758,"question_id":2792728,"last_edit_date":1273346078},{"owner":{"profile_image":"https://www.gravatar.com/avatar/3445f56229632874a44596385ed6d40c?s=256&d=identicon&r=PG","account_id":113401,"user_type":"registered","user_id":298661,"link":"https://stackoverflow.com/users/298661/puppy","reputation":145171,"display_name":"Puppy","accept_rate":82},"content_license":"CC BY-SA 2.5","score":0,"is_accepted":false,"last_activity_date":1273341589,"creation_date":1273341589,"body":"<p>Error codes are for if you want to send them to the user. If not, use an exception.</p>\n","answer_id":2795070,"question_id":2792728},{"owner":{"profile_image":"https://i.stack.imgur.com/enNdg.jpg?s=256&g=1","account_id":21994,"user_type":"registered","user_id":53897,"link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen","reputation":73808,"display_name":"Thorbj&#248;rn Ravn Andersen","accept_rate":56},"content_license":"CC BY-SA 2.5","score":2,"is_accepted":false,"last_activity_date":1273341174,"creation_date":1273341174,"body":"<p>Error codes were designed in an age where the only way for a function to tell the caller that something went wrong was to assign a special meaning to one or more values of those which can be returned, and very frequently only a native integer or so was available for returning that special value.</p>\n\n<p>For instance, in C the \"get character\" routine returns the next character value in ASCII, but returns a negative value if for some reason something went wrong.  You are then responsible for returning to YOUR caller in a way so this error situation can be handled, and that must return etc.</p>\n\n<p>The Exception mechanism is an elegant way to handle this \"this is an emergency, we must return from code until something can deal with the problem\".  Error codes are inferior to this.</p>\n","answer_id":2795051,"question_id":2792728},{"owner":{"profile_image":"https://www.gravatar.com/avatar/4e4970688774a749d9212ed9c55fcc38?s=256&d=identicon&r=PG","account_id":127699,"user_type":"registered","user_id":325042,"link":"https://stackoverflow.com/users/325042/winesoaked","reputation":1475,"display_name":"WineSoaked"},"content_license":"CC BY-SA 2.5","score":0,"is_accepted":false,"last_activity_date":1273304834,"creation_date":1273304834,"body":"<p>I've written many web services that are consumed by other (remote) applications. When things go badly with a request, customers more or less insist on getting a code, so that they don't have to do some horrific string comparison to find out what went wrong.</p>\n\n<p>Take HTTP result codes as a fine example of this sort of behavior. \"200\" means happy, \"300\" could go either way, \"400\" or \"500\" means start freaking out.</p>\n","answer_id":2793317,"question_id":2792728},{"owner":{"profile_image":"https://www.gravatar.com/avatar/deed7d59f1a9090c474f6a73c54926c0?s=256&d=identicon&r=PG","account_id":803864,"user_type":"unregistered","user_id":335982,"link":"https://stackoverflow.com/users/335982/jqpdev","reputation":61,"display_name":"jqpdev"},"content_license":"CC BY-SA 2.5","score":6,"is_accepted":false,"last_activity_date":1273291611,"creation_date":1273291611,"body":"<p>I'm a newbie to stack overflow but...</p>\n\n<p>I believe that error codes tend to be used or useful for dealing with erroneous situations that require an end-user of sorts to get involved to rectify a situation.  If your code is to be maintained by another developer then exceptions is the way to go.  However, in a situation where there is a problem:</p>\n\n<ul>\n<li><p>in the environment that your application is running</p></li>\n<li><p>with communication between your app and some other entity (web server, database, socket, etc)</p></li>\n<li><p>that a device or device driver indicates (hardware failure maybe?)</p></li>\n</ul>\n\n<p>then error codes may make sense.  For example, if your app attempted to log into a database on behalf of your end-user, but the DB was unreachable for authentication (DB is off-line, cable is unplugged) then an error code/description combo might help the end-user rectify the problem.</p>\n\n<p>Again at the developer/engineer level who will be able to touch the source code (traditional debugging and testing techniques) and modify it, use exceptions.</p>\n\n<p>Hope this helps...</p>\n\n<p>--jqpdev</p>\n","answer_id":2792902,"question_id":2792728},{"owner":{"profile_image":"https://i.stack.imgur.com/oTCwx.png?s=256&g=1","account_id":66354,"user_type":"registered","user_id":194709,"link":"https://stackoverflow.com/users/194709/chris-o","reputation":5017,"display_name":"Chris O"},"content_license":"CC BY-SA 2.5","score":2,"is_accepted":false,"last_activity_date":1273288672,"creation_date":1273288672,"body":"<p>C#, and probably Java too, supports a better exception handling control flow, the finally keyword, which makes things a little nicer than using error codes.  An exception object can contain any level of detail, certainly much more than an error code.  So the exception object is way more practical, but you might run into an uncommon case where an error code would be more appropriate.</p>\n\n<p>FWIW, C++ also supports exception objects.  I don't think that C++ supports a finally keyword (though the newer C++ whatevers just might), but in C++ you also have to avoid things like returning inside a catch handler.</p>\n","answer_id":2792816,"question_id":2792728},{"owner":{"profile_image":"https://i.stack.imgur.com/4S0Zu.jpg?s=256&g=1","account_id":23991,"user_type":"registered","user_id":60682,"link":"https://stackoverflow.com/users/60682/david","reputation":72914,"display_name":"David","accept_rate":97},"content_license":"CC BY-SA 2.5","score":11,"is_accepted":false,"last_activity_date":1273286655,"creation_date":1273286655,"body":"<p>I don't think I've ever used error codes in .Net except in <strong><em>one</em></strong> situation - when I was creating a console application that I knew was going to be called from another app.  This other app had to know when the console app failed, and what went wrong.  So, one example of when it would be appropriate would be when you know your program will be called by other programs, and you want a structured way for them to understand errors.</p>\n\n<p>That said, I was a newbie to .NET at the time, and have never used error codes since.  </p>\n\n<p>As a side note, as a Windows guy, it's nice to be able to plop in an error code and come up with a KB article, so an error code combined with good documentation and the ability to find it = nice feelings from your users. </p>\n","answer_id":2792755,"question_id":2792728},{"owner":{"profile_image":"https://www.gravatar.com/avatar/1aa48f7606f5b08595b0a0356a61e8b6?s=256&d=identicon&r=PG","account_id":28542,"user_type":"registered","user_id":76337,"link":"https://stackoverflow.com/users/76337/john-saunders","reputation":160920,"display_name":"John Saunders","accept_rate":70},"content_license":"CC BY-SA 2.5","score":2,"is_accepted":false,"last_activity_date":1273286511,"creation_date":1273286511,"body":"<p>Error codes are old-school. They are of little to no value at all.</p>\n\n<p>The only possible value to an error code is that it can identify a very specific circumstance. You could have a code for each point in the code base that can throw an exception. This would allow you to narrow down very precisely what the problem must be.</p>\n\n<p>But nobody cares about that level of detail. Who wants to maintain such a mess. It would leave you with codes that meant something like \"condition A and B but not C due to state S\". It's more effort than it's worth to try to work out exactly what that means. A stack trace will be more valuable in telling you where in the program the problem occurred.</p>\n\n<p>I learned to program computers before exceptions were a widespread technique. I'm <em>so</em> glad we got exceptions instead!</p>\n","answer_id":2792746,"question_id":2792728},{"owner":{"profile_image":"https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=256&d=identicon&r=PG","account_id":1885,"user_type":"registered","user_id":2598,"link":"https://stackoverflow.com/users/2598/jjnguy","reputation":137382,"display_name":"jjnguy","accept_rate":93},"content_license":"CC BY-SA 2.5","score":118,"is_accepted":true,"last_activity_date":1246473264,"creation_date":1246472311,"body":"<p>All you need to do is create a new <code>class</code> and have it <code>extend Exception</code>.</p>\n\n<p>If you want an <code>Exception</code> that is unchecked, you need to <code>extend RuntimeException</code>.</p>\n\n<p><strong>Note</strong>: A checked <code>Exception</code> is one that requires you to either surround the <code>Exception</code> in a <code>try</code>/<code>catch</code> block or have a '<code>throws</code>' clause on the method declaration. (like <code>IOException</code>)  Unchecked <code>Exceptions</code> may be thrown just like checked <code>Exceptions</code>, but you aren't required to explicitly handle them in any way (<code>IndexOutOfBoundsException</code>).</p>\n\n<p>For example:</p>\n\n<pre><code>public class MyNewException extends RuntimeException {\n\n    public MyNewException(){\n        super();\n    }\n\n    public MyNewException(String message){\n        super(message);\n    }\n}\n</code></pre>\n","answer_id":1070593,"question_id":1070590,"last_edit_date":1246473264},{"owner":{"profile_image":"https://www.gravatar.com/avatar/053082988d5c2da6fe500a209f8cfdd8?s=256&d=identicon&r=PG","account_id":30387,"user_type":"registered","user_id":82865,"link":"https://stackoverflow.com/users/82865/jonathan-holloway","reputation":62490,"display_name":"Jonathan Holloway","accept_rate":71},"content_license":"CC BY-SA 2.5","score":3,"is_accepted":false,"last_activity_date":1246472497,"creation_date":1246472497,"body":"<p>Take a look at:</p>\n\n<p><a href=\"http://www.onjava.com/pub/a/onjava/2003/11/19/exceptions.html?page=1\" rel=\"nofollow noreferrer\">http://www.onjava.com/pub/a/onjava/2003/11/19/exceptions.html?page=1</a></p>\n\n<p>An example is given there on page 2:</p>\n\n<pre><code>public class DuplicateUsernameException\n    extends Exception {\n    public DuplicateUsernameException \n        (String username){....}\n    public String requestedUsername(){...}\n    public String[] availableNames(){...}\n}\n</code></pre>\n\n<p>along with a set of guidelines for when and why you'd create your own exceptions.</p>\n","answer_id":1070610,"question_id":1070590}]